{
  "todoComments": [],
  "fixmeComments": [],
  "developmentComments": [
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 42,
      "type": "console_log",
      "content": "console.log('üöÄ Starting Documentation Sync Analysis...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 43,
      "type": "console_log",
      "content": "console.log('=====================================');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 50,
      "type": "console_log",
      "content": "console.log('üìÅ Loading project files...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 52,
      "type": "console_log",
      "content": "console.log(`‚úÖ Loaded ${files.size} files`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 55,
      "type": "console_log",
      "content": "console.log('\\nüîç Analyzing codebase...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 57,
      "type": "console_log",
      "content": "console.log('‚úÖ Code analysis completed');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 58,
      "type": "console_log",
      "content": "console.log(this.codeScanner.getSummary(codeResult));",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 61,
      "type": "console_log",
      "content": "console.log('\\nüìö Analyzing documentation...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 63,
      "type": "console_log",
      "content": "console.log('‚úÖ Documentation analysis completed');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 64,
      "type": "console_log",
      "content": "console.log(this.docScanner.getSummary(docResult));",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 67,
      "type": "console_log",
      "content": "console.log('\\n‚öñÔ∏è Comparing code and documentation...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 72,
      "type": "console_log",
      "content": "console.log('‚úÖ Comparison completed');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 75,
      "type": "console_log",
      "content": "console.log('\\nüìÑ Generating report...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 82,
      "type": "console_log",
      "content": "console.log('‚úÖ Report generated');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 87,
      "type": "console_log",
      "content": "console.log('\\nüéØ Analysis Summary:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 88,
      "type": "console_log",
      "content": "console.log(summary);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 102,
      "type": "console_log",
      "content": "console.error('‚ùå Analysis failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 121,
      "type": "console_log",
      "content": "console.log('üìÅ Reading real project files...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 125,
      "type": "console_log",
      "content": "console.warn('‚ö†Ô∏è No files found, falling back to mock data');",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 129,
      "type": "console_log",
      "content": "console.log(`‚úÖ Successfully loaded ${files.size} real files`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\AnalysisRunner.ts",
      "line": 133,
      "type": "console_log",
      "content": "console.warn('‚ö†Ô∏è Failed to read real files, using mock data:', error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\engine\\ComparisonEngine.ts",
      "line": 30,
      "type": "console_log",
      "content": "console.log('‚öñÔ∏è Starting code vs documentation comparison...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\engine\\ComparisonEngine.ts",
      "line": 56,
      "type": "console_log",
      "content": "console.log('‚úÖ Comparison completed');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\reports\\ReportGenerator.ts",
      "line": 32,
      "type": "console_log",
      "content": "console.log(`üìÑ Generating ${format} report...`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\AntiRegressionAnalyzer.ts",
      "line": 136,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not analyze anti-regression file ${filePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\ChangelogParser.ts",
      "line": 118,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not parse changelog ${filePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\CodeScanner.ts",
      "line": 27,
      "type": "console_log",
      "content": "console.log('üîç Starting codebase analysis...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\CodeScanner.ts",
      "line": 44,
      "type": "console_log",
      "content": "console.log('‚úÖ Codebase analysis completed');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\DocumentationScanner.ts",
      "line": 24,
      "type": "console_log",
      "content": "console.log('üìö Starting documentation analysis...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\DocumentationScanner.ts",
      "line": 41,
      "type": "console_log",
      "content": "console.log('‚úÖ Documentation analysis completed');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
      "line": 124,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not extract versions from ${filePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
      "line": 184,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not read README file ${readmePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
      "line": 224,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not read changelog file ${changelogPath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
      "line": 264,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not read anti-regression file ${filePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\MarkdownParser.ts",
      "line": 116,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not parse ${filePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\ProjectStructureAnalyzer.ts",
      "line": 112,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not read directory ${dirPath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\ProjectStructureAnalyzer.ts",
      "line": 152,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not analyze dependencies for ${file.path}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\RoadmapParser.ts",
      "line": 126,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not parse roadmap ${filePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
      "line": 155,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not analyze roadmap ${path}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
      "line": 232,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not analyze item \"${item.title}\":`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
      "line": 337,
      "type": "console_log",
      "content": "console.warn('Warning: Could not search codebase:', error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\DependencyMapper.ts",
      "line": 44,
      "type": "console_log",
      "content": "console.warn(`Warning: Could not analyze dependencies for ${filePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\ErrorHandler.ts",
      "line": 15,
      "type": "console_log",
      "content": "console.error(`[FATAL] ${error.message}`, error.file ? `in ${error.file}` : '');",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\analysis\\utils\\ErrorHandler.ts",
      "line": 22,
      "type": "console_log",
      "content": "console.warn(`[WARNING] ${error.message}`, error.file ? `in ${error.file}` : '');",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\ErrorHandler.ts",
      "line": 24,
      "type": "console_log",
      "content": "console.info(`[INFO] ${error.message}`, error.file ? `in ${error.file}` : '');",
      "comment": "info",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\FileSystemReader.ts",
      "line": 28,
      "type": "console_log",
      "content": "console.error('Failed to read project files:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\analysis\\utils\\FileSystemReader.ts",
      "line": 53,
      "type": "console_log",
      "content": "console.warn(`Key file ${fileName} not found`);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\FileSystemReader.ts",
      "line": 67,
      "type": "console_log",
      "content": "console.warn('Source directory not found or inaccessible');",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\FileSystemReader.ts",
      "line": 80,
      "type": "console_log",
      "content": "console.warn('Documentation directory not found or inaccessible');",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\FileSystemReader.ts",
      "line": 114,
      "type": "console_log",
      "content": "console.warn(`Failed to read ${relativeFilePath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\FileSystemReader.ts",
      "line": 118,
      "type": "console_log",
      "content": "console.warn(`Failed to read directory ${dirPath}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\utils\\FileTypeClassifier.ts",
      "line": 38,
      "type": "temporary",
      "content": "// Templates",
      "comment": "lates",
      "severity": "medium"
    },
    {
      "file": "src\\analysis\\__tests__\\MarkdownParser.test.ts",
      "line": 170,
      "type": "console_log",
      "content": "console.log('code block');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\App.tsx",
      "line": 127,
      "type": "console_log",
      "content": "console.log('[Zustand State Change] Lo stato √® cambiato.', {",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\App.tsx",
      "line": 160,
      "type": "console_log",
      "content": "console.log(`Scale: ${scale.toFixed(2)}, Viewport: ${viewportWidth}x${viewportHeight}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\App.tsx",
      "line": 165,
      "type": "console_log",
      "content": "console.log(`FPS: ${currentFPS}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\components\\LoadScreen.tsx",
      "line": 63,
      "type": "console_log",
      "content": "console.error('Error loading save slots:', err);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\components\\LoadScreen.tsx",
      "line": 171,
      "type": "console_log",
      "content": "console.error('Load game error:', err);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\components\\LoadScreen.tsx",
      "line": 223,
      "type": "console_log",
      "content": "console.error('Delete save error:', err);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\components\\LoadScreen.tsx",
      "line": 250,
      "type": "console_log",
      "content": "console.error('Recovery error:', err);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\components\\LoadScreen.tsx",
      "line": 271,
      "type": "console_log",
      "content": "console.error('Export error:', err);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\components\\LoadScreen.tsx",
      "line": 309,
      "type": "console_log",
      "content": "console.error('Import error:', err);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\data\\MessageArchive.ts",
      "line": 14,
      "type": "console_log",
      "content": "console.warn(`Nessun messaggio trovato per il tipo: ${type}`);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\data\\MessageArchive.ts",
      "line": 103,
      "type": "console_log",
      "content": "console.warn(`Bioma '${context.biome}' non mappato, usando messaggio default`);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\data\\MessageArchive.ts",
      "line": 119,
      "type": "console_log",
      "content": "console.warn(`Array messaggi vuoto per il tipo: ${type}`);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\data\\MessageArchive.ts",
      "line": 125,
      "type": "console_log",
      "content": "console.warn(`Formato messaggio non riconosciuto per il tipo: ${type}`);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\hooks\\usePlayerMovement.ts",
      "line": 38,
      "type": "console_log",
      "content": "console.log(`üö´ Movimento bloccato: fuori dai confini (${x}, ${y})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\hooks\\usePlayerMovement.ts",
      "line": 46,
      "type": "console_log",
      "content": "console.log(`üèîÔ∏è Movimento bloccato: montagna a (${x}, ${y})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\rules\\mechanics.ts",
      "line": 192,
      "type": "console_log",
      "content": "console.error(`[addItem] Oggetto con ID ${itemId} non trovato.`);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\rules\\mechanics.ts",
      "line": 226,
      "type": "console_log",
      "content": "console.warn(`[addItem] Inventario pieno. Impossibile aggiungere ${itemToAdd.name}.`);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\rules\\mechanics.ts",
      "line": 246,
      "type": "console_log",
      "content": "console.error(`[removeItem] Tentativo di rimuovere da uno slot vuoto (indice: ${slotIndex}).`);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 98,
      "type": "console_log",
      "content": "console.error(\"Initialization failed in store:\", error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 125,
      "type": "console_log",
      "content": "console.log(\"Exit action triggered\");",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 876,
      "type": "temporary",
      "content": "// Tempo sereno - nessuna penalit√†, possibile bonus leggero",
      "comment": "o sereno - nessuna penalit√†, possibile bonus leggero",
      "severity": "medium"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 888,
      "type": "temporary",
      "content": "// Tempesta - condizioni estremamente pericolose",
      "comment": "esta - condizioni estremamente pericolose",
      "severity": "medium"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1360,
      "type": "console_log",
      "content": "console.error('Save error:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1397,
      "type": "console_log",
      "content": "console.error(\"Failed to load map data during game load:\", error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1447,
      "type": "console_log",
      "content": "console.error('Load error:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1517,
      "type": "console_log",
      "content": "console.error('Export error:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1589,
      "type": "console_log",
      "content": "console.error('Import error:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1607,
      "type": "console_log",
      "content": "console.error('Import setup error:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 182,
      "type": "console_log",
      "content": "console.log('üåê BROWSER COMPATIBILITY REPORT');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 183,
      "type": "console_log",
      "content": "console.log('================================');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 184,
      "type": "console_log",
      "content": "console.log(`Browser: ${result.browser.name} ${result.browser.version}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 185,
      "type": "console_log",
      "content": "console.log(`Supported: ${result.browser.isSupported ? '‚úÖ YES' : '‚ùå NO'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 186,
      "type": "console_log",
      "content": "console.log(`Score: ${result.score}/100 (${result.status.toUpperCase()})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 187,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 188,
      "type": "console_log",
      "content": "console.log('Feature Tests:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 189,
      "type": "console_log",
      "content": "console.log(`  CSS Variables: ${result.tests.cssVariables ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 190,
      "type": "console_log",
      "content": "console.log(`  CSS Grid: ${result.tests.cssGrid ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 191,
      "type": "console_log",
      "content": "console.log(`  Flexbox: ${result.tests.flexbox ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 192,
      "type": "console_log",
      "content": "console.log(`  Transform 3D: ${result.tests.transform3d ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 193,
      "type": "console_log",
      "content": "console.log(`  Animation: ${result.tests.animation ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 194,
      "type": "console_log",
      "content": "console.log(`  Performance API: ${result.tests.performance ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 195,
      "type": "console_log",
      "content": "console.log(`  Memory API: ${result.tests.memory ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 196,
      "type": "console_log",
      "content": "console.log(`  CRT Effects: ${result.tests.crtEffects ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 197,
      "type": "console_log",
      "content": "console.log(`  Scaling: ${result.tests.scaling ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 198,
      "type": "console_log",
      "content": "console.log(`  Responsive: ‚ùå RIMOSSO (keyboard-only desktop)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 199,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 202,
      "type": "console_log",
      "content": "console.log('üéâ EXCELLENT compatibility - All features supported!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 204,
      "type": "console_log",
      "content": "console.log('‚úÖ GOOD compatibility - Most features supported');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 206,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è ACCEPTABLE compatibility - Some features may not work optimally');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\browserTest.ts",
      "line": 208,
      "type": "console_log",
      "content": "console.log('‚ùå POOR compatibility - Many features may not work');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 246,
      "type": "console_log",
      "content": "console.log('=== REPORT COLORI MESSAGGI ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 247,
      "type": "console_log",
      "content": "console.log(`Totale MessageType: ${getAllMessageColors().length}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 248,
      "type": "console_log",
      "content": "console.log(`Categorie: ${Object.keys(grouped).length}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 249,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 252,
      "type": "console_log",
      "content": "console.log(`üìÇ ${category.toUpperCase()}:`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 254,
      "type": "console_log",
      "content": "console.log(`  ‚úÖ ${color.messageType}: ${color.cssClass} (${color.color})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 255,
      "type": "console_log",
      "content": "console.log(`     ${color.description}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 257,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 271,
      "type": "console_log",
      "content": "console.error('‚ùå MessageType senza colore:', missing);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\colorTest.ts",
      "line": 275,
      "type": "console_log",
      "content": "console.log('‚úÖ Tutti i MessageType hanno un colore assegnato');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 206,
      "type": "console_log",
      "content": "console.error('Error ID:', gameError.id);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 207,
      "type": "console_log",
      "content": "console.error('Type:', gameError.type);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 208,
      "type": "console_log",
      "content": "console.error('Message:', gameError.message);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 209,
      "type": "console_log",
      "content": "console.error('Stack:', gameError.stack);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 210,
      "type": "console_log",
      "content": "console.error('Context:', gameError.context);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 232,
      "type": "console_log",
      "content": "console.warn('Failed to send error to service:', error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 283,
      "type": "console_log",
      "content": "console.error('üö® Unhandled Promise Rejection:', gameError);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\errorHandler.tsx",
      "line": 309,
      "type": "console_log",
      "content": "console.error('üö® Unhandled Error:', gameError);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\fileUtils.ts",
      "line": 31,
      "type": "console_log",
      "content": "console.error('Download failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\fontTest.ts",
      "line": 34,
      "type": "console_log",
      "content": "console.log(`IBM Plex Mono loaded: ${isIBMPCLoaded}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\fontTest.ts",
      "line": 52,
      "type": "console_log",
      "content": "console.log(`${font} available: ${isAvailable}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\fontTest.ts",
      "line": 101,
      "type": "console_log",
      "content": "console.log('üî§ Starting Font IBM PC Cross-Browser Test...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\fontTest.ts",
      "line": 108,
      "type": "console_log",
      "content": "console.log('üî§ Font Test Results:', Object.fromEntries(this.testResults));",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 59,
      "type": "console_log",
      "content": "console.log('=== REPORT COLORI INVENTARIO ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 60,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 62,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 63,
      "type": "console_log",
      "content": "console.log(`   Oggetti totali: ${result.totalItems}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 64,
      "type": "console_log",
      "content": "console.log(`   Colori unici utilizzati: ${result.uniqueColors}/12`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 65,
      "type": "console_log",
      "content": "console.log(`   Copertura colori: ${result.coverageScore.toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 66,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 68,
      "type": "console_log",
      "content": "console.log('üé® DISTRIBUZIONE COLORI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 73,
      "type": "console_log",
      "content": "console.log(`   ${colorClass}: ${count} oggetti (${percentage.toFixed(1)}%) - ${color}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 75,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 77,
      "type": "console_log",
      "content": "console.log('üì¶ DISTRIBUZIONE TIPI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 80,
      "type": "console_log",
      "content": "console.log(`   ${type}: ${count} oggetti (${percentage.toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 82,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 84,
      "type": "console_log",
      "content": "console.log('üíé DISTRIBUZIONE RARIT√Ä:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 87,
      "type": "console_log",
      "content": "console.log(`   ${rarity}: ${count} oggetti (${percentage.toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 89,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 91,
      "type": "console_log",
      "content": "console.log('üîç ESEMPI PER COLORE:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 107,
      "type": "console_log",
      "content": "console.log(`   ${colorClass} (${description}):`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 109,
      "type": "console_log",
      "content": "console.log(`     - ${item.name} (${item.type}${item.rarity ? `, ${item.rarity}` : ''})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 132,
      "type": "console_log",
      "content": "console.log('üîç VALIDAZIONE SISTEMA COLORI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 137,
      "type": "console_log",
      "content": "console.log(`   ${status} ${check.name}: ${check.value} (min: ${check.min})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 141,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 152,
      "type": "console_log",
      "content": "console.log(`‚ö†Ô∏è Tipo ${type} ha colori multipli: ${typeColors[type]} e ${colorClass}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 156,
      "type": "console_log",
      "content": "console.log(allPassed ? '‚úÖ Sistema colori validato con successo!' : '‚ùå Sistema colori necessita miglioramenti.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 165,
      "type": "console_log",
      "content": "console.log('üé® AVVIO TEST COMPLETO COLORI INVENTARIO üé®');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 166,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 171,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 174,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventoryColorTest.ts",
      "line": 175,
      "type": "console_log",
      "content": "console.log('‚úÖ Test colori inventario completato!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 161,
      "type": "console_log",
      "content": "console.log('=== REPORT INDICATORI SELEZIONE INVENTARIO ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 162,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 164,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 165,
      "type": "console_log",
      "content": "console.log(`   Indicatori totali: ${result.totalIndicators}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 166,
      "type": "console_log",
      "content": "console.log(`   Indicatori implementati: ${result.implementedIndicators}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 167,
      "type": "console_log",
      "content": "console.log(`   Tasso implementazione: ${((result.implementedIndicators/result.totalIndicators)*100).toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 168,
      "type": "console_log",
      "content": "console.log(`   Punteggio generale: ${result.overallScore.toFixed(1)}/100`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 169,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 171,
      "type": "console_log",
      "content": "console.log('üéØ PUNTEGGI SPECIFICI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 172,
      "type": "console_log",
      "content": "console.log(`   Usabilit√†: ${result.usabilityScore.toFixed(1)}/100`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 173,
      "type": "console_log",
      "content": "console.log(`   Accessibilit√†: ${result.accessibilityScore.toFixed(1)}/100`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 174,
      "type": "console_log",
      "content": "console.log(`   Feedback Visivo: ${result.visualFeedbackScore.toFixed(1)}/100`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 175,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 177,
      "type": "console_log",
      "content": "console.log('‚úÖ INDICATORI IMPLEMENTATI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 180,
      "type": "console_log",
      "content": "console.log(`   ‚úÖ ${indicator.name}: ${indicator.description}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 181,
      "type": "console_log",
      "content": "console.log(`      Effetto: ${indicator.effect}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 183,
      "type": "console_log",
      "content": "console.log(`      CSS: ${indicator.cssClass}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 190,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 191,
      "type": "console_log",
      "content": "console.log('‚ùå INDICATORI NON IMPLEMENTATI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 193,
      "type": "console_log",
      "content": "console.log(`   ‚ùå ${indicator.name}: ${indicator.description}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 222,
      "type": "console_log",
      "content": "console.log('üîç VALIDAZIONE INDICATORI SELEZIONE:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 227,
      "type": "console_log",
      "content": "console.log(`   ${status} ${check.name}: ${check.value.toFixed(1)} (min: ${check.min})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 231,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 232,
      "type": "console_log",
      "content": "console.log(allPassed ? '‚úÖ Tutti i criteri di qualit√† sono soddisfatti!' : '‚ùå Alcuni criteri necessitano miglioramenti.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 241,
      "type": "console_log",
      "content": "console.log('üéØ AVVIO TEST COMPLETO INDICATORI SELEZIONE üéØ');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 242,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 247,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 250,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\inventorySelectionTest.ts",
      "line": 251,
      "type": "console_log",
      "content": "console.log('‚úÖ Test indicatori selezione completato!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 59,
      "type": "console_log",
      "content": "console.log('=== REPORT AZIONI OGGETTI ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 60,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 62,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 63,
      "type": "console_log",
      "content": "console.log(`   Oggetti totali: ${result.totalItems}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 64,
      "type": "console_log",
      "content": "console.log(`   Oggetti con azioni: ${result.itemsWithActions}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 65,
      "type": "console_log",
      "content": "console.log(`   Copertura azioni: ${result.coverageScore.toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 66,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 68,
      "type": "console_log",
      "content": "console.log('üéØ DISTRIBUZIONE AZIONI DISPONIBILI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 79,
      "type": "console_log",
      "content": "console.log(`   ${name} (${key}): ${count} oggetti (${percentage.toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 81,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 83,
      "type": "console_log",
      "content": "console.log('‚≠ê DISTRIBUZIONE AZIONI DEFAULT:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 87,
      "type": "console_log",
      "content": "console.log(`   ${name} (${key}): ${count} oggetti (${percentage.toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 89,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 91,
      "type": "console_log",
      "content": "console.log('üîç ESEMPI PER TIPO:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 105,
      "type": "console_log",
      "content": "console.log(`   ${type.toUpperCase()}:`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 110,
      "type": "console_log",
      "content": "console.log(`     - ${item.name}: [${availableActions}] (default: ${defaultAction?.key || 'nessuna'})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 119,
      "type": "console_log",
      "content": "console.log('üîç TEST ESAME DETTAGLIATO:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 120,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 126,
      "type": "console_log",
      "content": "console.log(`üìã ESAME: ${item.name}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 130,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 132,
      "type": "console_log",
      "content": "console.log(`   ${line}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 135,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 160,
      "type": "console_log",
      "content": "console.log('üîç VALIDAZIONE SISTEMA AZIONI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 165,
      "type": "console_log",
      "content": "console.log(`   ${status} ${check.name}: ${check.value.toFixed(1)} (min: ${check.min})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 169,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 170,
      "type": "console_log",
      "content": "console.log(allPassed ? '‚úÖ Sistema azioni validato con successo!' : '‚ùå Sistema azioni necessita miglioramenti.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 179,
      "type": "console_log",
      "content": "console.log('‚öôÔ∏è AVVIO TEST COMPLETO AZIONI OGGETTI ‚öôÔ∏è');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 180,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 185,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 188,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 191,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemActionsTest.ts",
      "line": 192,
      "type": "console_log",
      "content": "console.log('‚úÖ Test azioni oggetti completato!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 118,
      "type": "console_log",
      "content": "console.log('=== TEST COLORI OGGETTI INVENTARIO ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 119,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 132,
      "type": "console_log",
      "content": "console.log(`${itemId}: ${item.name}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 133,
      "type": "console_log",
      "content": "console.log(`  Tipo: ${item.type}, Rarit√†: ${item.rarity || 'N/A'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 134,
      "type": "console_log",
      "content": "console.log(`  Colore: ${description} (${color})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 135,
      "type": "console_log",
      "content": "console.log(`  Classe CSS: ${colorClass}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 136,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 139,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE COLORI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 141,
      "type": "console_log",
      "content": "console.log(`  ${colorClass}: ${count} oggetti`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 144,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 145,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE TIPI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 147,
      "type": "console_log",
      "content": "console.log(`  ${type}: ${count} oggetti`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 150,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemColors.ts",
      "line": 151,
      "type": "console_log",
      "content": "console.log(`‚úÖ Test completato: ${Object.keys(items).length} oggetti analizzati`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 314,
      "type": "console_log",
      "content": "console.log('=== REPORT TEST SISTEMA OPZIONI OGGETTI ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 315,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 321,
      "type": "console_log",
      "content": "console.log('üìä RISULTATI GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 322,
      "type": "console_log",
      "content": "console.log(`   Test passati: ${passed}/${total} (${percentage.toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 323,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 325,
      "type": "console_log",
      "content": "console.log('üß™ DETTAGLI TEST:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 328,
      "type": "console_log",
      "content": "console.log(`${status} ${result.testName}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 329,
      "type": "console_log",
      "content": "console.log(`   ${result.details}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 331,
      "type": "console_log",
      "content": "console.log(`   Errore: ${result.error}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 333,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 337,
      "type": "console_log",
      "content": "console.log('üéâ ECCELLENTE: Sistema opzioni oggetti perfetto!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 339,
      "type": "console_log",
      "content": "console.log('‚úÖ BUONO: Sistema opzioni oggetti funziona bene.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 341,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è PROBLEMI: Sistema opzioni oggetti necessita correzioni.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 349,
      "type": "console_log",
      "content": "console.log('‚öôÔ∏è AVVIO TEST COMPLETO SISTEMA OPZIONI OGGETTI ‚öôÔ∏è');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 350,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 355,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\itemOptionsTest.ts",
      "line": 356,
      "type": "console_log",
      "content": "console.log('‚úÖ Test sistema opzioni oggetti completato!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 89,
      "type": "console_log",
      "content": "console.error('Error analyzing map:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 98,
      "type": "console_log",
      "content": "console.log('=== ANALISI MAPPA BIOMI ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 99,
      "type": "console_log",
      "content": "console.log(`Celle totali: ${analysis.totalCells}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 100,
      "type": "console_log",
      "content": "console.log(`Simboli unici: ${analysis.uniqueSymbols.length}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 101,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 103,
      "type": "console_log",
      "content": "console.log('BIOMI IDENTIFICATI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 106,
      "type": "console_log",
      "content": "console.log(`${status} ${biome.symbol}: ${biome.count} celle (${biome.percentage.toFixed(1)}%) - ${biome.description}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 110,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 111,
      "type": "console_log",
      "content": "console.log('SIMBOLI SCONOSCIUTI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mapAnalyzer.ts",
      "line": 113,
      "type": "console_log",
      "content": "console.log(`‚ùå '${symbol}': Non mappato`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\messageSystemTest.ts",
      "line": 76,
      "type": "console_log",
      "content": "console.log('üß™ Running comprehensive message system test...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\messageSystemTest.ts",
      "line": 98,
      "type": "console_log",
      "content": "console.log(summary);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 119,
      "type": "console_log",
      "content": "console.log('=== REPORT MESSAGGI IRONICI MONTAGNE ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 120,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 122,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 123,
      "type": "console_log",
      "content": "console.log(`   Messaggi unici: ${result.totalMessages}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 124,
      "type": "console_log",
      "content": "console.log(`   Lunghezza media: ${result.averageLength.toFixed(1)} caratteri`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 125,
      "type": "console_log",
      "content": "console.log(`   Messaggi ironici: ${result.ironicMessages}/${result.totalMessages} (${((result.ironicMessages/result.totalMessages)*100).toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 126,
      "type": "console_log",
      "content": "console.log(`   Punteggio qualit√†: ${result.qualityScore.toFixed(1)}/100`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 127,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 129,
      "type": "console_log",
      "content": "console.log('üé≠ DISTRIBUZIONE TONI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 132,
      "type": "console_log",
      "content": "console.log(`   ${tone}: ${count} messaggi (${percentage.toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 134,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 136,
      "type": "console_log",
      "content": "console.log('üí¨ TUTTI I MESSAGGI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 141,
      "type": "console_log",
      "content": "console.log(`   ${index}. ${ironicIcon} \"${message}\"`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 142,
      "type": "console_log",
      "content": "console.log(`      Tono: ${analysis.tone}, Parole chiave: [${analysis.keywords.join(', ')}]`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 145,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 149,
      "type": "console_log",
      "content": "console.log('‚úÖ ECCELLENTE: Messaggi di altissima qualit√† con variet√† e ironia perfette!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 151,
      "type": "console_log",
      "content": "console.log('‚úÖ OTTIMO: Messaggi di buona qualit√† con ironia appropriata.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 153,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è BUONO: Messaggi accettabili ma potrebbero beneficiare di pi√π variet√†.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 155,
      "type": "console_log",
      "content": "console.log('‚ùå MIGLIORABILE: Messaggi necessitano di pi√π ironia e variet√†.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 182,
      "type": "console_log",
      "content": "console.log('üîç VALIDAZIONE QUALIT√Ä MESSAGGI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 187,
      "type": "console_log",
      "content": "console.log(`   ${status} ${check.name}: ${check.value} (min: ${check.min})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 191,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 192,
      "type": "console_log",
      "content": "console.log(allPassed ? '‚úÖ Tutti i criteri di qualit√† sono soddisfatti!' : '‚ùå Alcuni criteri necessitano miglioramenti.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 201,
      "type": "console_log",
      "content": "console.log('‚õ∞Ô∏è AVVIO TEST COMPLETO MESSAGGI MONTAGNE ‚õ∞Ô∏è');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 202,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 207,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 210,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\mountainMessageTest.ts",
      "line": 211,
      "type": "console_log",
      "content": "console.log('‚úÖ Test messaggi montagne completato!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 85,
      "type": "console_log",
      "content": "console.log('üîç Performance monitoring started');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 99,
      "type": "console_log",
      "content": "console.log('‚èπÔ∏è Performance monitoring stopped');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 155,
      "type": "console_log",
      "content": "console.log('üìä PERFORMANCE REPORT');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 156,
      "type": "console_log",
      "content": "console.log('=====================');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 157,
      "type": "console_log",
      "content": "console.log(`FPS: ${report.averageFps} avg (${report.minFps}-${report.maxFps})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 158,
      "type": "console_log",
      "content": "console.log(`Memory: ${report.averageMemory} MB avg, ${report.peakMemory} MB peak`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 159,
      "type": "console_log",
      "content": "console.log(`CPU: ${report.averageCpu}% avg, ${report.peakCpu}% peak`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 160,
      "type": "console_log",
      "content": "console.log(`Samples: ${report.totalSamples}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 161,
      "type": "console_log",
      "content": "console.log(`Duration: ${report.duration}ms`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 165,
      "type": "console_log",
      "content": "console.log('‚úÖ Performance: EXCELLENT (55+ FPS)');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 167,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è Performance: GOOD (45-54 FPS)');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 169,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è Performance: ACCEPTABLE (30-44 FPS)');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 171,
      "type": "console_log",
      "content": "console.log('‚ùå Performance: POOR (<30 FPS)');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 175,
      "type": "console_log",
      "content": "console.log('‚úÖ Memory: EXCELLENT (<50 MB)');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 177,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è Memory: GOOD (50-100 MB)');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\performanceMonitor.ts",
      "line": 179,
      "type": "console_log",
      "content": "console.log('‚ùå Memory: HIGH (>100 MB)');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 247,
      "type": "console_log",
      "content": "console.log('=== REPORT TEST INTEGRAZIONE SISTEMA PORZIONI ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 248,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 254,
      "type": "console_log",
      "content": "console.log('üìä RISULTATI GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 255,
      "type": "console_log",
      "content": "console.log(`   Test passati: ${passed}/${total} (${percentage.toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 256,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 258,
      "type": "console_log",
      "content": "console.log('üß™ DETTAGLI TEST:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 261,
      "type": "console_log",
      "content": "console.log(`${status} ${result.testName}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 262,
      "type": "console_log",
      "content": "console.log(`   ${result.details}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 264,
      "type": "console_log",
      "content": "console.log(`   Errore: ${result.error}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 266,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 270,
      "type": "console_log",
      "content": "console.log('üéâ ECCELLENTE: Integrazione sistema porzioni perfetta!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 272,
      "type": "console_log",
      "content": "console.log('‚úÖ BUONO: Integrazione sistema porzioni funziona bene.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 274,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è PROBLEMI: Integrazione sistema porzioni necessita correzioni.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 282,
      "type": "console_log",
      "content": "console.log('üîó AVVIO TEST COMPLETO INTEGRAZIONE PORZIONI üîó');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 283,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 288,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionIntegrationTest.ts",
      "line": 289,
      "type": "console_log",
      "content": "console.log('‚úÖ Test integrazione sistema porzioni completato!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 215,
      "type": "console_log",
      "content": "console.log('=== REPORT TEST SISTEMA PORZIONI ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 216,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 218,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 219,
      "type": "console_log",
      "content": "console.log(`   Scenari totali: ${result.totalScenarios}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 220,
      "type": "console_log",
      "content": "console.log(`   Scenari passati: ${result.passedScenarios}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 221,
      "type": "console_log",
      "content": "console.log(`   Scenari falliti: ${result.failedScenarios}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 222,
      "type": "console_log",
      "content": "console.log(`   Punteggio copertura: ${result.coverageScore.toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 223,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 225,
      "type": "console_log",
      "content": "console.log('üß™ RISULTATI DETTAGLIATI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 228,
      "type": "console_log",
      "content": "console.log(`   ${status} ${test.scenario}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 231,
      "type": "console_log",
      "content": "console.log(`      Atteso: ${JSON.stringify(test.expected)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 232,
      "type": "console_log",
      "content": "console.log(`      Ottenuto: ${JSON.stringify(test.actual)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 234,
      "type": "console_log",
      "content": "console.log(`      Errore: ${test.error}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 239,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 242,
      "type": "console_log",
      "content": "console.log('‚úÖ ECCELLENTE: Sistema porzioni funziona perfettamente!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 244,
      "type": "console_log",
      "content": "console.log('‚úÖ BUONO: Sistema porzioni funziona bene con piccoli problemi.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 246,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è ACCETTABILE: Sistema porzioni ha alcuni problemi da risolvere.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 248,
      "type": "console_log",
      "content": "console.log('‚ùå PROBLEMATICO: Sistema porzioni necessita correzioni significative.');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 256,
      "type": "console_log",
      "content": "console.log('üîß TEST UTILIT√Ä SISTEMA PORZIONI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 257,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 266,
      "type": "console_log",
      "content": "console.log(`   ‚úÖ ${item.name}: ${item.portionsPerUnit} ${item.portionSize}i per unit√†`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 272,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 273,
      "type": "console_log",
      "content": "console.log(`üìä Oggetti con porzioni: ${portionableCount}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 274,
      "type": "console_log",
      "content": "console.log(`üìä Oggetti senza porzioni: ${nonPortionableCount}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 275,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 278,
      "type": "console_log",
      "content": "console.log('üìù TEST DESCRIZIONI PORZIONI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 282,
      "type": "console_log",
      "content": "console.log(`   Slot completo: ${getPortionDescription(testItem, slot)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 285,
      "type": "console_log",
      "content": "console.log(`   Dopo 1 consumo: ${getPortionDescription(testItem, slot)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 289,
      "type": "console_log",
      "content": "console.log(`   Dopo 3 consumi: ${getPortionDescription(testItem, slot)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 297,
      "type": "console_log",
      "content": "console.log('üçΩÔ∏è AVVIO TEST COMPLETO SISTEMA PORZIONI üçΩÔ∏è');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 298,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 303,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 306,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\portionSystemTest.ts",
      "line": 307,
      "type": "console_log",
      "content": "console.log('‚úÖ Test sistema porzioni completato!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\readabilityTest.ts",
      "line": 47,
      "type": "console_log",
      "content": "console.log(`üìä Contrast ratio: ${contrastRatio.toFixed(3)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\readabilityTest.ts",
      "line": 65,
      "type": "console_log",
      "content": "console.log(`üì± ${resolution.name} (${resolution.width}x${resolution.height}): ${isReadable ? '‚úÖ' : '‚ùå'} Leggibile`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\readabilityTest.ts",
      "line": 117,
      "type": "console_log",
      "content": "console.log(`üî§ Special characters supported: ${isSpecialCharsSupported ? '‚úÖ' : '‚ùå'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\readabilityTest.ts",
      "line": 140,
      "type": "console_log",
      "content": "console.log(`üìè Line spacing ratio: ${spacingRatio.toFixed(2)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\readabilityTest.ts",
      "line": 146,
      "type": "console_log",
      "content": "console.log('üìñ Starting IBM Plex Mono Readability Test...');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\readabilityTest.ts",
      "line": 153,
      "type": "console_log",
      "content": "console.log('üìñ Readability Test Results:', Object.fromEntries(this.testResults));",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 39,
      "type": "console_log",
      "content": "console.log(`üß™ ${test.name}:`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 40,
      "type": "console_log",
      "content": "console.log(`   Risoluzione: ${test.width}x${test.height}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 41,
      "type": "console_log",
      "content": "console.log(`   Scale atteso: ${test.expectedScale}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 42,
      "type": "console_log",
      "content": "console.log(`   Scale calcolato: ${finalScale.toFixed(2)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 43,
      "type": "console_log",
      "content": "console.log(`   Risultato: ${isCorrect ? '‚úÖ PASS' : '‚ùå FAIL'}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 44,
      "type": "console_log",
      "content": "console.log(`   Descrizione: ${test.description}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 45,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 51,
      "type": "console_log",
      "content": "console.log('üöÄ INIZIO TEST DESKTOP-ONLY RISOLUZIONE');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 52,
      "type": "console_log",
      "content": "console.log('==========================================');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 63,
      "type": "console_log",
      "content": "console.log('üìä RISULTATI FINALI');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 64,
      "type": "console_log",
      "content": "console.log('====================');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 65,
      "type": "console_log",
      "content": "console.log(`Test superati: ${passedTests}/${totalTests}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 66,
      "type": "console_log",
      "content": "console.log(`Success rate: ${((passedTests / totalTests) * 100).toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 69,
      "type": "console_log",
      "content": "console.log('üéâ TUTTI I TEST SUPERATI! Sistema multi-risoluzione OK');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\resolutionTest.ts",
      "line": 71,
      "type": "console_log",
      "content": "console.log('‚ö†Ô∏è  ALCUNI TEST FALLITI - Verificare implementazione');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 119,
      "type": "console_log",
      "content": "console.log('=== REPORT TEST SKILL CHECK FIUME ===');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 120,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 123,
      "type": "console_log",
      "content": "console.log(`üåä ${result.scenario.name.toUpperCase()}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 124,
      "type": "console_log",
      "content": "console.log(`   Agilit√†: ${result.scenario.agilityScore} (Modificatore: ${Math.floor((result.scenario.agilityScore - 10) / 2)})`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 125,
      "type": "console_log",
      "content": "console.log(`   Tentativi: ${result.attempts}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 126,
      "type": "console_log",
      "content": "console.log(`   Successi: ${result.successes} (${(result.successRate * 100).toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 127,
      "type": "console_log",
      "content": "console.log(`   Fallimenti: ${result.failures} (${((1 - result.successRate) * 100).toFixed(1)}%)`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 128,
      "type": "console_log",
      "content": "console.log(`   Danno medio per fallimento: ${result.averageDamage.toFixed(1)}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 129,
      "type": "console_log",
      "content": "console.log(`   Tasso successo atteso: ${(result.scenario.expectedSuccessRate * 100).toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 133,
      "type": "console_log",
      "content": "console.log(`   ${status} Deviazione: ${(deviation * 100).toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 134,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 152,
      "type": "console_log",
      "content": "console.log('‚úÖ Tutti i messaggi fiume sono implementati:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 154,
      "type": "console_log",
      "content": "console.log(`   - ${message}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 164,
      "type": "console_log",
      "content": "console.log('üåä AVVIO TEST COMPLETO SISTEMA FIUME üåä');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 165,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 169,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 180,
      "type": "console_log",
      "content": "console.log('üìä STATISTICHE GENERALI:');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 181,
      "type": "console_log",
      "content": "console.log(`   Tentativi totali: ${totalAttempts}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 182,
      "type": "console_log",
      "content": "console.log(`   Successi totali: ${totalSuccesses}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 183,
      "type": "console_log",
      "content": "console.log(`   Tasso successo generale: ${(overallSuccessRate * 100).toFixed(1)}%`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 184,
      "type": "console_log",
      "content": "console.log('');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\riverSkillCheckTest.ts",
      "line": 185,
      "type": "console_log",
      "content": "console.log('‚úÖ Test sistema fiume completato con successo!');",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 110,
      "type": "console_log",
      "content": "console.log(`Game saved to slot ${slot}:`, {",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 119,
      "type": "console_log",
      "content": "console.error('Save failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 148,
      "type": "console_log",
      "content": "console.log(`Game loaded from slot ${slot}:`, {",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 156,
      "type": "console_log",
      "content": "console.error('Load failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 195,
      "type": "console_log",
      "content": "console.warn(`Corrupted save in slot ${slot}:`, error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 212,
      "type": "console_log",
      "content": "console.log(`Save deleted from slot: ${slot}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 215,
      "type": "console_log",
      "content": "console.error('Delete failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 230,
      "type": "console_log",
      "content": "console.error('Export failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 246,
      "type": "console_log",
      "content": "console.log(`Save imported to slot ${slot}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 249,
      "type": "console_log",
      "content": "console.error('Import failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 282,
      "type": "console_log",
      "content": "console.log(`Save recovered for slot ${slot}`);",
      "comment": "log",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 288,
      "type": "console_log",
      "content": "console.error('Recovery failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 407,
      "type": "console_log",
      "content": "console.error('Recovery attempt failed:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 430,
      "type": "console_log",
      "content": "console.warn('Auto-save failed:', error);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 546,
      "type": "console_log",
      "content": "console.warn(`Unknown save version: ${saveData.version}`);",
      "comment": "warn",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 586,
      "type": "console_log",
      "content": "console.error('Save error:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 595,
      "type": "console_log",
      "content": "console.error('Load error:', error);",
      "comment": "error",
      "severity": "high"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 616,
      "type": "console_log",
      "content": "console.error('Import error:', error);",
      "comment": "error",
      "severity": "high"
    }
  ],
  "deprecatedCode": [
    {
      "file": "src\\analysis\\scanners\\ChangelogParser.ts",
      "line": 73,
      "type": "deprecated",
      "content": "{ pattern: /^###?\\s*(?:Deprecated|Deprecato|Obsoleto)/i, type: 'deprecated' },",
      "comment": "###?\\s*(?:Deprecated|Deprecato|Obsoleto)/i, type: 'deprecated",
      "severity": "medium"
    },
    {
      "file": "src\\interfaces\\gameState.ts",
      "line": 87,
      "type": "deprecated",
      "content": "visitedShelters: Record<string, boolean>; // Deprecated - mantenuto per compatibilit√†",
      "comment": "// Deprecated",
      "severity": "medium"
    },
    {
      "file": "src\\setupTests.ts",
      "line": 52,
      "type": "deprecated",
      "content": "addListener: jest.fn(), // deprecated",
      "comment": "// deprecated",
      "severity": "medium"
    },
    {
      "file": "src\\setupTests.ts",
      "line": 53,
      "type": "deprecated",
      "content": "removeListener: jest.fn(), // deprecated",
      "comment": "// deprecated",
      "severity": "medium"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 34,
      "type": "deprecated",
      "content": "visitedShelters: {}, // Deprecated - mantenuto per compatibilit√†",
      "comment": "// Deprecated",
      "severity": "medium"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 89,
      "type": "deprecated",
      "content": "visitedShelters: {}, // Resetta rifugi (deprecated)",
      "comment": "// Resetta rifugi (deprecated",
      "severity": "medium"
    }
  ],
  "partialImplementations": [
    {
      "file": "src\\analysis\\engine\\ComparisonEngine.ts",
      "line": 166,
      "type": "partial",
      "content": "// Find features documented but not implemented",
      "comment": "// Find features documented but not implemented",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\engine\\ComparisonEngine.ts",
      "line": 239,
      "type": "partial",
      "content": "// For now, we'll create placeholder discrepancies based on our earlier analysis",
      "comment": "// For now, we'll create placeholder",
      "severity": "low"
    },
    {
      "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
      "line": 499,
      "type": "partial",
      "content": "// In-progress items that aren't partially implemented are medium severity",
      "comment": "// In-progress items that aren't partial",
      "severity": "low"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1121,
      "type": "partial",
      "content": "consumeFood: () => { /* Placeholder */ },",
      "comment": "/* Placeholder",
      "severity": "low"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1122,
      "type": "partial",
      "content": "consumeDrink: () => { /* Placeholder */ },",
      "comment": "/* Placeholder",
      "severity": "low"
    }
  ],
  "workInProgress": [
    {
      "file": "src\\components\\UniversalInfoPage.tsx",
      "line": 5,
      "type": "wip",
      "content": "* Linee guida per FUTURE MODIFICHE alle dimensioni testo e layout:",
      "comment": "* Linee guida per FUTURE",
      "severity": "low"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1172,
      "type": "wip",
      "content": "// Visita diurna - marca come non pi√π accessibile per future visite diurne",
      "comment": "// Visita diurna - marca come non pi√π accessibile per future",
      "severity": "low"
    },
    {
      "file": "src\\stores\\gameStore.ts",
      "line": 1327,
      "type": "wip",
      "content": "gameFlags: {} // per future espansioni",
      "comment": "// per future",
      "severity": "low"
    },
    {
      "file": "src\\utils\\equipmentManager.ts",
      "line": 21,
      "type": "wip",
      "content": "// Per ora solo weapon e armor, accessory per future espansioni",
      "comment": "// Per ora solo weapon e armor, accessory per future",
      "severity": "low"
    },
    {
      "file": "src\\utils\\saveSystem.ts",
      "line": 30,
      "type": "wip",
      "content": "gameFlags: Record<string, any>; // for future quest/event tracking",
      "comment": "// for future",
      "severity": "low"
    }
  ],
  "summary": {
    "totalFiles": 109,
    "totalComments": 431,
    "fileGroups": {
      "src\\analysis\\AnalysisRunner.ts": [
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 42,
          "type": "console_log",
          "content": "console.log('üöÄ Starting Documentation Sync Analysis...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 43,
          "type": "console_log",
          "content": "console.log('=====================================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 50,
          "type": "console_log",
          "content": "console.log('üìÅ Loading project files...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 52,
          "type": "console_log",
          "content": "console.log(`‚úÖ Loaded ${files.size} files`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 55,
          "type": "console_log",
          "content": "console.log('\\nüîç Analyzing codebase...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 57,
          "type": "console_log",
          "content": "console.log('‚úÖ Code analysis completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 58,
          "type": "console_log",
          "content": "console.log(this.codeScanner.getSummary(codeResult));",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 61,
          "type": "console_log",
          "content": "console.log('\\nüìö Analyzing documentation...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log('‚úÖ Documentation analysis completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log(this.docScanner.getSummary(docResult));",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 67,
          "type": "console_log",
          "content": "console.log('\\n‚öñÔ∏è Comparing code and documentation...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 72,
          "type": "console_log",
          "content": "console.log('‚úÖ Comparison completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 75,
          "type": "console_log",
          "content": "console.log('\\nüìÑ Generating report...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 82,
          "type": "console_log",
          "content": "console.log('‚úÖ Report generated');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 87,
          "type": "console_log",
          "content": "console.log('\\nüéØ Analysis Summary:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 88,
          "type": "console_log",
          "content": "console.log(summary);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 102,
          "type": "console_log",
          "content": "console.error('‚ùå Analysis failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 121,
          "type": "console_log",
          "content": "console.log('üìÅ Reading real project files...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.warn('‚ö†Ô∏è No files found, falling back to mock data');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 129,
          "type": "console_log",
          "content": "console.log(`‚úÖ Successfully loaded ${files.size} real files`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 133,
          "type": "console_log",
          "content": "console.warn('‚ö†Ô∏è Failed to read real files, using mock data:', error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\engine\\ComparisonEngine.ts": [
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 30,
          "type": "console_log",
          "content": "console.log('‚öñÔ∏è Starting code vs documentation comparison...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 56,
          "type": "console_log",
          "content": "console.log('‚úÖ Comparison completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 166,
          "type": "partial",
          "content": "// Find features documented but not implemented",
          "comment": "// Find features documented but not implemented",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 239,
          "type": "partial",
          "content": "// For now, we'll create placeholder discrepancies based on our earlier analysis",
          "comment": "// For now, we'll create placeholder",
          "severity": "low"
        }
      ],
      "src\\analysis\\reports\\ReportGenerator.ts": [
        {
          "file": "src\\analysis\\reports\\ReportGenerator.ts",
          "line": 32,
          "type": "console_log",
          "content": "console.log(`üìÑ Generating ${format} report...`);",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\AntiRegressionAnalyzer.ts": [
        {
          "file": "src\\analysis\\scanners\\AntiRegressionAnalyzer.ts",
          "line": 136,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze anti-regression file ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\ChangelogParser.ts": [
        {
          "file": "src\\analysis\\scanners\\ChangelogParser.ts",
          "line": 118,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not parse changelog ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\ChangelogParser.ts",
          "line": 73,
          "type": "deprecated",
          "content": "{ pattern: /^###?\\s*(?:Deprecated|Deprecato|Obsoleto)/i, type: 'deprecated' },",
          "comment": "###?\\s*(?:Deprecated|Deprecato|Obsoleto)/i, type: 'deprecated",
          "severity": "medium"
        }
      ],
      "src\\analysis\\scanners\\CodeScanner.ts": [
        {
          "file": "src\\analysis\\scanners\\CodeScanner.ts",
          "line": 27,
          "type": "console_log",
          "content": "console.log('üîç Starting codebase analysis...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\CodeScanner.ts",
          "line": 44,
          "type": "console_log",
          "content": "console.log('‚úÖ Codebase analysis completed');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\DocumentationScanner.ts": [
        {
          "file": "src\\analysis\\scanners\\DocumentationScanner.ts",
          "line": 24,
          "type": "console_log",
          "content": "console.log('üìö Starting documentation analysis...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationScanner.ts",
          "line": 41,
          "type": "console_log",
          "content": "console.log('‚úÖ Documentation analysis completed');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\DocumentationVersionExtractor.ts": [
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 124,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not extract versions from ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 184,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read README file ${readmePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 224,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read changelog file ${changelogPath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 264,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read anti-regression file ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\MarkdownParser.ts": [
        {
          "file": "src\\analysis\\scanners\\MarkdownParser.ts",
          "line": 116,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not parse ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\ProjectStructureAnalyzer.ts": [
        {
          "file": "src\\analysis\\scanners\\ProjectStructureAnalyzer.ts",
          "line": 112,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read directory ${dirPath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\ProjectStructureAnalyzer.ts",
          "line": 152,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze dependencies for ${file.path}:`, error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\RoadmapParser.ts": [
        {
          "file": "src\\analysis\\scanners\\RoadmapParser.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not parse roadmap ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts": [
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 155,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze roadmap ${path}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 232,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze item \"${item.title}\":`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 337,
          "type": "console_log",
          "content": "console.warn('Warning: Could not search codebase:', error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 499,
          "type": "partial",
          "content": "// In-progress items that aren't partially implemented are medium severity",
          "comment": "// In-progress items that aren't partial",
          "severity": "low"
        }
      ],
      "src\\analysis\\utils\\DependencyMapper.ts": [
        {
          "file": "src\\analysis\\utils\\DependencyMapper.ts",
          "line": 44,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze dependencies for ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\utils\\ErrorHandler.ts": [
        {
          "file": "src\\analysis\\utils\\ErrorHandler.ts",
          "line": 15,
          "type": "console_log",
          "content": "console.error(`[FATAL] ${error.message}`, error.file ? `in ${error.file}` : '');",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\analysis\\utils\\ErrorHandler.ts",
          "line": 22,
          "type": "console_log",
          "content": "console.warn(`[WARNING] ${error.message}`, error.file ? `in ${error.file}` : '');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\ErrorHandler.ts",
          "line": 24,
          "type": "console_log",
          "content": "console.info(`[INFO] ${error.message}`, error.file ? `in ${error.file}` : '');",
          "comment": "info",
          "severity": "low"
        }
      ],
      "src\\analysis\\utils\\FileSystemReader.ts": [
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 28,
          "type": "console_log",
          "content": "console.error('Failed to read project files:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 53,
          "type": "console_log",
          "content": "console.warn(`Key file ${fileName} not found`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 67,
          "type": "console_log",
          "content": "console.warn('Source directory not found or inaccessible');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 80,
          "type": "console_log",
          "content": "console.warn('Documentation directory not found or inaccessible');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 114,
          "type": "console_log",
          "content": "console.warn(`Failed to read ${relativeFilePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 118,
          "type": "console_log",
          "content": "console.warn(`Failed to read directory ${dirPath}:`, error);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\analysis\\utils\\FileTypeClassifier.ts": [
        {
          "file": "src\\analysis\\utils\\FileTypeClassifier.ts",
          "line": 38,
          "type": "temporary",
          "content": "// Templates",
          "comment": "lates",
          "severity": "medium"
        }
      ],
      "src\\analysis\\__tests__\\MarkdownParser.test.ts": [
        {
          "file": "src\\analysis\\__tests__\\MarkdownParser.test.ts",
          "line": 170,
          "type": "console_log",
          "content": "console.log('code block');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\App.tsx": [
        {
          "file": "src\\App.tsx",
          "line": 127,
          "type": "console_log",
          "content": "console.log('[Zustand State Change] Lo stato √® cambiato.', {",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\App.tsx",
          "line": 160,
          "type": "console_log",
          "content": "console.log(`Scale: ${scale.toFixed(2)}, Viewport: ${viewportWidth}x${viewportHeight}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\App.tsx",
          "line": 165,
          "type": "console_log",
          "content": "console.log(`FPS: ${currentFPS}`);",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\components\\LoadScreen.tsx": [
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 63,
          "type": "console_log",
          "content": "console.error('Error loading save slots:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 171,
          "type": "console_log",
          "content": "console.error('Load game error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 223,
          "type": "console_log",
          "content": "console.error('Delete save error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 250,
          "type": "console_log",
          "content": "console.error('Recovery error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 271,
          "type": "console_log",
          "content": "console.error('Export error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 309,
          "type": "console_log",
          "content": "console.error('Import error:', err);",
          "comment": "error",
          "severity": "high"
        }
      ],
      "src\\data\\MessageArchive.ts": [
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 14,
          "type": "console_log",
          "content": "console.warn(`Nessun messaggio trovato per il tipo: ${type}`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 103,
          "type": "console_log",
          "content": "console.warn(`Bioma '${context.biome}' non mappato, usando messaggio default`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.warn(`Array messaggi vuoto per il tipo: ${type}`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.warn(`Formato messaggio non riconosciuto per il tipo: ${type}`);",
          "comment": "warn",
          "severity": "low"
        }
      ],
      "src\\hooks\\usePlayerMovement.ts": [
        {
          "file": "src\\hooks\\usePlayerMovement.ts",
          "line": 38,
          "type": "console_log",
          "content": "console.log(`üö´ Movimento bloccato: fuori dai confini (${x}, ${y})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\hooks\\usePlayerMovement.ts",
          "line": 46,
          "type": "console_log",
          "content": "console.log(`üèîÔ∏è Movimento bloccato: montagna a (${x}, ${y})`);",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\rules\\mechanics.ts": [
        {
          "file": "src\\rules\\mechanics.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.error(`[addItem] Oggetto con ID ${itemId} non trovato.`);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\rules\\mechanics.ts",
          "line": 226,
          "type": "console_log",
          "content": "console.warn(`[addItem] Inventario pieno. Impossibile aggiungere ${itemToAdd.name}.`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\rules\\mechanics.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.error(`[removeItem] Tentativo di rimuovere da uno slot vuoto (indice: ${slotIndex}).`);",
          "comment": "error",
          "severity": "high"
        }
      ],
      "src\\stores\\gameStore.ts": [
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 98,
          "type": "console_log",
          "content": "console.error(\"Initialization failed in store:\", error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.log(\"Exit action triggered\");",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 876,
          "type": "temporary",
          "content": "// Tempo sereno - nessuna penalit√†, possibile bonus leggero",
          "comment": "o sereno - nessuna penalit√†, possibile bonus leggero",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 888,
          "type": "temporary",
          "content": "// Tempesta - condizioni estremamente pericolose",
          "comment": "esta - condizioni estremamente pericolose",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1360,
          "type": "console_log",
          "content": "console.error('Save error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1397,
          "type": "console_log",
          "content": "console.error(\"Failed to load map data during game load:\", error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1447,
          "type": "console_log",
          "content": "console.error('Load error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1517,
          "type": "console_log",
          "content": "console.error('Export error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1589,
          "type": "console_log",
          "content": "console.error('Import error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1607,
          "type": "console_log",
          "content": "console.error('Import setup error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 34,
          "type": "deprecated",
          "content": "visitedShelters: {}, // Deprecated - mantenuto per compatibilit√†",
          "comment": "// Deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 89,
          "type": "deprecated",
          "content": "visitedShelters: {}, // Resetta rifugi (deprecated)",
          "comment": "// Resetta rifugi (deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1121,
          "type": "partial",
          "content": "consumeFood: () => { /* Placeholder */ },",
          "comment": "/* Placeholder",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1122,
          "type": "partial",
          "content": "consumeDrink: () => { /* Placeholder */ },",
          "comment": "/* Placeholder",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1172,
          "type": "wip",
          "content": "// Visita diurna - marca come non pi√π accessibile per future visite diurne",
          "comment": "// Visita diurna - marca come non pi√π accessibile per future",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1327,
          "type": "wip",
          "content": "gameFlags: {} // per future espansioni",
          "comment": "// per future",
          "severity": "low"
        }
      ],
      "src\\utils\\browserTest.ts": [
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 182,
          "type": "console_log",
          "content": "console.log('üåê BROWSER COMPATIBILITY REPORT');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 183,
          "type": "console_log",
          "content": "console.log('================================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 184,
          "type": "console_log",
          "content": "console.log(`Browser: ${result.browser.name} ${result.browser.version}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 185,
          "type": "console_log",
          "content": "console.log(`Supported: ${result.browser.isSupported ? '‚úÖ YES' : '‚ùå NO'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 186,
          "type": "console_log",
          "content": "console.log(`Score: ${result.score}/100 (${result.status.toUpperCase()})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 187,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 188,
          "type": "console_log",
          "content": "console.log('Feature Tests:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 189,
          "type": "console_log",
          "content": "console.log(`  CSS Variables: ${result.tests.cssVariables ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 190,
          "type": "console_log",
          "content": "console.log(`  CSS Grid: ${result.tests.cssGrid ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log(`  Flexbox: ${result.tests.flexbox ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.log(`  Transform 3D: ${result.tests.transform3d ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 193,
          "type": "console_log",
          "content": "console.log(`  Animation: ${result.tests.animation ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 194,
          "type": "console_log",
          "content": "console.log(`  Performance API: ${result.tests.performance ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 195,
          "type": "console_log",
          "content": "console.log(`  Memory API: ${result.tests.memory ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 196,
          "type": "console_log",
          "content": "console.log(`  CRT Effects: ${result.tests.crtEffects ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 197,
          "type": "console_log",
          "content": "console.log(`  Scaling: ${result.tests.scaling ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 198,
          "type": "console_log",
          "content": "console.log(`  Responsive: ‚ùå RIMOSSO (keyboard-only desktop)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 199,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 202,
          "type": "console_log",
          "content": "console.log('üéâ EXCELLENT compatibility - All features supported!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 204,
          "type": "console_log",
          "content": "console.log('‚úÖ GOOD compatibility - Most features supported');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 206,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è ACCEPTABLE compatibility - Some features may not work optimally');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 208,
          "type": "console_log",
          "content": "console.log('‚ùå POOR compatibility - Many features may not work');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\colorTest.ts": [
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.log('=== REPORT COLORI MESSAGGI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 247,
          "type": "console_log",
          "content": "console.log(`Totale MessageType: ${getAllMessageColors().length}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 248,
          "type": "console_log",
          "content": "console.log(`Categorie: ${Object.keys(grouped).length}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 249,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 252,
          "type": "console_log",
          "content": "console.log(`üìÇ ${category.toUpperCase()}:`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 254,
          "type": "console_log",
          "content": "console.log(`  ‚úÖ ${color.messageType}: ${color.cssClass} (${color.color})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 255,
          "type": "console_log",
          "content": "console.log(`     ${color.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 257,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 271,
          "type": "console_log",
          "content": "console.error('‚ùå MessageType senza colore:', missing);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 275,
          "type": "console_log",
          "content": "console.log('‚úÖ Tutti i MessageType hanno un colore assegnato');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\errorHandler.tsx": [
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 206,
          "type": "console_log",
          "content": "console.error('Error ID:', gameError.id);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 207,
          "type": "console_log",
          "content": "console.error('Type:', gameError.type);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 208,
          "type": "console_log",
          "content": "console.error('Message:', gameError.message);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 209,
          "type": "console_log",
          "content": "console.error('Stack:', gameError.stack);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 210,
          "type": "console_log",
          "content": "console.error('Context:', gameError.context);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 232,
          "type": "console_log",
          "content": "console.warn('Failed to send error to service:', error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 283,
          "type": "console_log",
          "content": "console.error('üö® Unhandled Promise Rejection:', gameError);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 309,
          "type": "console_log",
          "content": "console.error('üö® Unhandled Error:', gameError);",
          "comment": "error",
          "severity": "high"
        }
      ],
      "src\\utils\\fileUtils.ts": [
        {
          "file": "src\\utils\\fileUtils.ts",
          "line": 31,
          "type": "console_log",
          "content": "console.error('Download failed:', error);",
          "comment": "error",
          "severity": "high"
        }
      ],
      "src\\utils\\fontTest.ts": [
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 34,
          "type": "console_log",
          "content": "console.log(`IBM Plex Mono loaded: ${isIBMPCLoaded}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 52,
          "type": "console_log",
          "content": "console.log(`${font} available: ${isAvailable}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 101,
          "type": "console_log",
          "content": "console.log('üî§ Starting Font IBM PC Cross-Browser Test...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 108,
          "type": "console_log",
          "content": "console.log('üî§ Font Test Results:', Object.fromEntries(this.testResults));",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\inventoryColorTest.ts": [
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 59,
          "type": "console_log",
          "content": "console.log('=== REPORT COLORI INVENTARIO ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 60,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 62,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log(`   Oggetti totali: ${result.totalItems}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log(`   Colori unici utilizzati: ${result.uniqueColors}/12`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`   Copertura colori: ${result.coverageScore.toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 66,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 68,
          "type": "console_log",
          "content": "console.log('üé® DISTRIBUZIONE COLORI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 73,
          "type": "console_log",
          "content": "console.log(`   ${colorClass}: ${count} oggetti (${percentage.toFixed(1)}%) - ${color}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 75,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 77,
          "type": "console_log",
          "content": "console.log('üì¶ DISTRIBUZIONE TIPI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 80,
          "type": "console_log",
          "content": "console.log(`   ${type}: ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 82,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 84,
          "type": "console_log",
          "content": "console.log('üíé DISTRIBUZIONE RARIT√Ä:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 87,
          "type": "console_log",
          "content": "console.log(`   ${rarity}: ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 89,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 91,
          "type": "console_log",
          "content": "console.log('üîç ESEMPI PER COLORE:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 107,
          "type": "console_log",
          "content": "console.log(`   ${colorClass} (${description}):`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 109,
          "type": "console_log",
          "content": "console.log(`     - ${item.name} (${item.type}${item.rarity ? `, ${item.rarity}` : ''})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE SISTEMA COLORI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 137,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 141,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 152,
          "type": "console_log",
          "content": "console.log(`‚ö†Ô∏è Tipo ${type} ha colori multipli: ${typeColors[type]} e ${colorClass}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 156,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Sistema colori validato con successo!' : '‚ùå Sistema colori necessita miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log('üé® AVVIO TEST COMPLETO COLORI INVENTARIO üé®');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 166,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 171,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 174,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 175,
          "type": "console_log",
          "content": "console.log('‚úÖ Test colori inventario completato!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\inventorySelectionTest.ts": [
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 161,
          "type": "console_log",
          "content": "console.log('=== REPORT INDICATORI SELEZIONE INVENTARIO ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 162,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 164,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log(`   Indicatori totali: ${result.totalIndicators}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 166,
          "type": "console_log",
          "content": "console.log(`   Indicatori implementati: ${result.implementedIndicators}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 167,
          "type": "console_log",
          "content": "console.log(`   Tasso implementazione: ${((result.implementedIndicators/result.totalIndicators)*100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 168,
          "type": "console_log",
          "content": "console.log(`   Punteggio generale: ${result.overallScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 171,
          "type": "console_log",
          "content": "console.log('üéØ PUNTEGGI SPECIFICI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 172,
          "type": "console_log",
          "content": "console.log(`   Usabilit√†: ${result.usabilityScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 173,
          "type": "console_log",
          "content": "console.log(`   Accessibilit√†: ${result.accessibilityScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 174,
          "type": "console_log",
          "content": "console.log(`   Feedback Visivo: ${result.visualFeedbackScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 175,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 177,
          "type": "console_log",
          "content": "console.log('‚úÖ INDICATORI IMPLEMENTATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 180,
          "type": "console_log",
          "content": "console.log(`   ‚úÖ ${indicator.name}: ${indicator.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 181,
          "type": "console_log",
          "content": "console.log(`      Effetto: ${indicator.effect}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 183,
          "type": "console_log",
          "content": "console.log(`      CSS: ${indicator.cssClass}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 190,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log('‚ùå INDICATORI NON IMPLEMENTATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 193,
          "type": "console_log",
          "content": "console.log(`   ‚ùå ${indicator.name}: ${indicator.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 222,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE INDICATORI SELEZIONE:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 227,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value.toFixed(1)} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 231,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 232,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Tutti i criteri di qualit√† sono soddisfatti!' : '‚ùå Alcuni criteri necessitano miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 241,
          "type": "console_log",
          "content": "console.log('üéØ AVVIO TEST COMPLETO INDICATORI SELEZIONE üéØ');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 242,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 247,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 250,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 251,
          "type": "console_log",
          "content": "console.log('‚úÖ Test indicatori selezione completato!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\itemActionsTest.ts": [
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 59,
          "type": "console_log",
          "content": "console.log('=== REPORT AZIONI OGGETTI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 60,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 62,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log(`   Oggetti totali: ${result.totalItems}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log(`   Oggetti con azioni: ${result.itemsWithActions}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`   Copertura azioni: ${result.coverageScore.toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 66,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 68,
          "type": "console_log",
          "content": "console.log('üéØ DISTRIBUZIONE AZIONI DISPONIBILI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 79,
          "type": "console_log",
          "content": "console.log(`   ${name} (${key}): ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 81,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 83,
          "type": "console_log",
          "content": "console.log('‚≠ê DISTRIBUZIONE AZIONI DEFAULT:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 87,
          "type": "console_log",
          "content": "console.log(`   ${name} (${key}): ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 89,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 91,
          "type": "console_log",
          "content": "console.log('üîç ESEMPI PER TIPO:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 105,
          "type": "console_log",
          "content": "console.log(`   ${type.toUpperCase()}:`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 110,
          "type": "console_log",
          "content": "console.log(`     - ${item.name}: [${availableActions}] (default: ${defaultAction?.key || 'nessuna'})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('üîç TEST ESAME DETTAGLIATO:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 120,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.log(`üìã ESAME: ${item.name}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 130,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log(`   ${line}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 135,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 160,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE SISTEMA AZIONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value.toFixed(1)} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 170,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Sistema azioni validato con successo!' : '‚ùå Sistema azioni necessita miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 179,
          "type": "console_log",
          "content": "console.log('‚öôÔ∏è AVVIO TEST COMPLETO AZIONI OGGETTI ‚öôÔ∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 180,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 185,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 188,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.log('‚úÖ Test azioni oggetti completato!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\itemColors.ts": [
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 118,
          "type": "console_log",
          "content": "console.log('=== TEST COLORI OGGETTI INVENTARIO ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log(`${itemId}: ${item.name}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 133,
          "type": "console_log",
          "content": "console.log(`  Tipo: ${item.type}, Rarit√†: ${item.rarity || 'N/A'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 134,
          "type": "console_log",
          "content": "console.log(`  Colore: ${description} (${color})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 135,
          "type": "console_log",
          "content": "console.log(`  Classe CSS: ${colorClass}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 136,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 139,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE COLORI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 141,
          "type": "console_log",
          "content": "console.log(`  ${colorClass}: ${count} oggetti`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 144,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 145,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE TIPI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 147,
          "type": "console_log",
          "content": "console.log(`  ${type}: ${count} oggetti`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 150,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 151,
          "type": "console_log",
          "content": "console.log(`‚úÖ Test completato: ${Object.keys(items).length} oggetti analizzati`);",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\itemOptionsTest.ts": [
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 314,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST SISTEMA OPZIONI OGGETTI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 315,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 321,
          "type": "console_log",
          "content": "console.log('üìä RISULTATI GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 322,
          "type": "console_log",
          "content": "console.log(`   Test passati: ${passed}/${total} (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 323,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 325,
          "type": "console_log",
          "content": "console.log('üß™ DETTAGLI TEST:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 328,
          "type": "console_log",
          "content": "console.log(`${status} ${result.testName}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 329,
          "type": "console_log",
          "content": "console.log(`   ${result.details}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 331,
          "type": "console_log",
          "content": "console.log(`   Errore: ${result.error}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 333,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 337,
          "type": "console_log",
          "content": "console.log('üéâ ECCELLENTE: Sistema opzioni oggetti perfetto!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 339,
          "type": "console_log",
          "content": "console.log('‚úÖ BUONO: Sistema opzioni oggetti funziona bene.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 341,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è PROBLEMI: Sistema opzioni oggetti necessita correzioni.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 349,
          "type": "console_log",
          "content": "console.log('‚öôÔ∏è AVVIO TEST COMPLETO SISTEMA OPZIONI OGGETTI ‚öôÔ∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 350,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 355,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 356,
          "type": "console_log",
          "content": "console.log('‚úÖ Test sistema opzioni oggetti completato!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\mapAnalyzer.ts": [
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 89,
          "type": "console_log",
          "content": "console.error('Error analyzing map:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 98,
          "type": "console_log",
          "content": "console.log('=== ANALISI MAPPA BIOMI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 99,
          "type": "console_log",
          "content": "console.log(`Celle totali: ${analysis.totalCells}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 100,
          "type": "console_log",
          "content": "console.log(`Simboli unici: ${analysis.uniqueSymbols.length}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 101,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 103,
          "type": "console_log",
          "content": "console.log('BIOMI IDENTIFICATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 106,
          "type": "console_log",
          "content": "console.log(`${status} ${biome.symbol}: ${biome.count} celle (${biome.percentage.toFixed(1)}%) - ${biome.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 110,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 111,
          "type": "console_log",
          "content": "console.log('SIMBOLI SCONOSCIUTI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 113,
          "type": "console_log",
          "content": "console.log(`‚ùå '${symbol}': Non mappato`);",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\messageSystemTest.ts": [
        {
          "file": "src\\utils\\messageSystemTest.ts",
          "line": 76,
          "type": "console_log",
          "content": "console.log('üß™ Running comprehensive message system test...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\messageSystemTest.ts",
          "line": 98,
          "type": "console_log",
          "content": "console.log(summary);",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\mountainMessageTest.ts": [
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('=== REPORT MESSAGGI IRONICI MONTAGNE ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 120,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 122,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 123,
          "type": "console_log",
          "content": "console.log(`   Messaggi unici: ${result.totalMessages}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 124,
          "type": "console_log",
          "content": "console.log(`   Lunghezza media: ${result.averageLength.toFixed(1)} caratteri`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.log(`   Messaggi ironici: ${result.ironicMessages}/${result.totalMessages} (${((result.ironicMessages/result.totalMessages)*100).toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.log(`   Punteggio qualit√†: ${result.qualityScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 127,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 129,
          "type": "console_log",
          "content": "console.log('üé≠ DISTRIBUZIONE TONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log(`   ${tone}: ${count} messaggi (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 134,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 136,
          "type": "console_log",
          "content": "console.log('üí¨ TUTTI I MESSAGGI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 141,
          "type": "console_log",
          "content": "console.log(`   ${index}. ${ironicIcon} \"${message}\"`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 142,
          "type": "console_log",
          "content": "console.log(`      Tono: ${analysis.tone}, Parole chiave: [${analysis.keywords.join(', ')}]`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 145,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 149,
          "type": "console_log",
          "content": "console.log('‚úÖ ECCELLENTE: Messaggi di altissima qualit√† con variet√† e ironia perfette!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 151,
          "type": "console_log",
          "content": "console.log('‚úÖ OTTIMO: Messaggi di buona qualit√† con ironia appropriata.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 153,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è BUONO: Messaggi accettabili ma potrebbero beneficiare di pi√π variet√†.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 155,
          "type": "console_log",
          "content": "console.log('‚ùå MIGLIORABILE: Messaggi necessitano di pi√π ironia e variet√†.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 182,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE QUALIT√Ä MESSAGGI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 187,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Tutti i criteri di qualit√† sono soddisfatti!' : '‚ùå Alcuni criteri necessitano miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 201,
          "type": "console_log",
          "content": "console.log('‚õ∞Ô∏è AVVIO TEST COMPLETO MESSAGGI MONTAGNE ‚õ∞Ô∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 202,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 207,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 210,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 211,
          "type": "console_log",
          "content": "console.log('‚úÖ Test messaggi montagne completato!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\performanceMonitor.ts": [
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 85,
          "type": "console_log",
          "content": "console.log('üîç Performance monitoring started');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 99,
          "type": "console_log",
          "content": "console.log('‚èπÔ∏è Performance monitoring stopped');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 155,
          "type": "console_log",
          "content": "console.log('üìä PERFORMANCE REPORT');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 156,
          "type": "console_log",
          "content": "console.log('=====================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 157,
          "type": "console_log",
          "content": "console.log(`FPS: ${report.averageFps} avg (${report.minFps}-${report.maxFps})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 158,
          "type": "console_log",
          "content": "console.log(`Memory: ${report.averageMemory} MB avg, ${report.peakMemory} MB peak`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 159,
          "type": "console_log",
          "content": "console.log(`CPU: ${report.averageCpu}% avg, ${report.peakCpu}% peak`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 160,
          "type": "console_log",
          "content": "console.log(`Samples: ${report.totalSamples}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 161,
          "type": "console_log",
          "content": "console.log(`Duration: ${report.duration}ms`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log('‚úÖ Performance: EXCELLENT (55+ FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 167,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è Performance: GOOD (45-54 FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è Performance: ACCEPTABLE (30-44 FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 171,
          "type": "console_log",
          "content": "console.log('‚ùå Performance: POOR (<30 FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 175,
          "type": "console_log",
          "content": "console.log('‚úÖ Memory: EXCELLENT (<50 MB)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 177,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è Memory: GOOD (50-100 MB)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 179,
          "type": "console_log",
          "content": "console.log('‚ùå Memory: HIGH (>100 MB)');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\portionIntegrationTest.ts": [
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 247,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST INTEGRAZIONE SISTEMA PORZIONI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 248,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 254,
          "type": "console_log",
          "content": "console.log('üìä RISULTATI GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 255,
          "type": "console_log",
          "content": "console.log(`   Test passati: ${passed}/${total} (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 256,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 258,
          "type": "console_log",
          "content": "console.log('üß™ DETTAGLI TEST:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 261,
          "type": "console_log",
          "content": "console.log(`${status} ${result.testName}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 262,
          "type": "console_log",
          "content": "console.log(`   ${result.details}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 264,
          "type": "console_log",
          "content": "console.log(`   Errore: ${result.error}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 266,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 270,
          "type": "console_log",
          "content": "console.log('üéâ ECCELLENTE: Integrazione sistema porzioni perfetta!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 272,
          "type": "console_log",
          "content": "console.log('‚úÖ BUONO: Integrazione sistema porzioni funziona bene.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 274,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è PROBLEMI: Integrazione sistema porzioni necessita correzioni.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 282,
          "type": "console_log",
          "content": "console.log('üîó AVVIO TEST COMPLETO INTEGRAZIONE PORZIONI üîó');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 283,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 288,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 289,
          "type": "console_log",
          "content": "console.log('‚úÖ Test integrazione sistema porzioni completato!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\portionSystemTest.ts": [
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 215,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST SISTEMA PORZIONI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 216,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 218,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 219,
          "type": "console_log",
          "content": "console.log(`   Scenari totali: ${result.totalScenarios}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 220,
          "type": "console_log",
          "content": "console.log(`   Scenari passati: ${result.passedScenarios}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 221,
          "type": "console_log",
          "content": "console.log(`   Scenari falliti: ${result.failedScenarios}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 222,
          "type": "console_log",
          "content": "console.log(`   Punteggio copertura: ${result.coverageScore.toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 223,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 225,
          "type": "console_log",
          "content": "console.log('üß™ RISULTATI DETTAGLIATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 228,
          "type": "console_log",
          "content": "console.log(`   ${status} ${test.scenario}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 231,
          "type": "console_log",
          "content": "console.log(`      Atteso: ${JSON.stringify(test.expected)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 232,
          "type": "console_log",
          "content": "console.log(`      Ottenuto: ${JSON.stringify(test.actual)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 234,
          "type": "console_log",
          "content": "console.log(`      Errore: ${test.error}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 239,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 242,
          "type": "console_log",
          "content": "console.log('‚úÖ ECCELLENTE: Sistema porzioni funziona perfettamente!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 244,
          "type": "console_log",
          "content": "console.log('‚úÖ BUONO: Sistema porzioni funziona bene con piccoli problemi.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è ACCETTABILE: Sistema porzioni ha alcuni problemi da risolvere.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 248,
          "type": "console_log",
          "content": "console.log('‚ùå PROBLEMATICO: Sistema porzioni necessita correzioni significative.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 256,
          "type": "console_log",
          "content": "console.log('üîß TEST UTILIT√Ä SISTEMA PORZIONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 257,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 266,
          "type": "console_log",
          "content": "console.log(`   ‚úÖ ${item.name}: ${item.portionsPerUnit} ${item.portionSize}i per unit√†`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 272,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 273,
          "type": "console_log",
          "content": "console.log(`üìä Oggetti con porzioni: ${portionableCount}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 274,
          "type": "console_log",
          "content": "console.log(`üìä Oggetti senza porzioni: ${nonPortionableCount}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 275,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 278,
          "type": "console_log",
          "content": "console.log('üìù TEST DESCRIZIONI PORZIONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 282,
          "type": "console_log",
          "content": "console.log(`   Slot completo: ${getPortionDescription(testItem, slot)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 285,
          "type": "console_log",
          "content": "console.log(`   Dopo 1 consumo: ${getPortionDescription(testItem, slot)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 289,
          "type": "console_log",
          "content": "console.log(`   Dopo 3 consumi: ${getPortionDescription(testItem, slot)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 297,
          "type": "console_log",
          "content": "console.log('üçΩÔ∏è AVVIO TEST COMPLETO SISTEMA PORZIONI üçΩÔ∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 298,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 303,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 306,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 307,
          "type": "console_log",
          "content": "console.log('‚úÖ Test sistema porzioni completato!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\readabilityTest.ts": [
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 47,
          "type": "console_log",
          "content": "console.log(`üìä Contrast ratio: ${contrastRatio.toFixed(3)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`üì± ${resolution.name} (${resolution.width}x${resolution.height}): ${isReadable ? '‚úÖ' : '‚ùå'} Leggibile`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 117,
          "type": "console_log",
          "content": "console.log(`üî§ Special characters supported: ${isSpecialCharsSupported ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 140,
          "type": "console_log",
          "content": "console.log(`üìè Line spacing ratio: ${spacingRatio.toFixed(2)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 146,
          "type": "console_log",
          "content": "console.log('üìñ Starting IBM Plex Mono Readability Test...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 153,
          "type": "console_log",
          "content": "console.log('üìñ Readability Test Results:', Object.fromEntries(this.testResults));",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\resolutionTest.ts": [
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 39,
          "type": "console_log",
          "content": "console.log(`üß™ ${test.name}:`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 40,
          "type": "console_log",
          "content": "console.log(`   Risoluzione: ${test.width}x${test.height}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 41,
          "type": "console_log",
          "content": "console.log(`   Scale atteso: ${test.expectedScale}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 42,
          "type": "console_log",
          "content": "console.log(`   Scale calcolato: ${finalScale.toFixed(2)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 43,
          "type": "console_log",
          "content": "console.log(`   Risultato: ${isCorrect ? '‚úÖ PASS' : '‚ùå FAIL'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 44,
          "type": "console_log",
          "content": "console.log(`   Descrizione: ${test.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 45,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 51,
          "type": "console_log",
          "content": "console.log('üöÄ INIZIO TEST DESKTOP-ONLY RISOLUZIONE');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 52,
          "type": "console_log",
          "content": "console.log('==========================================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log('üìä RISULTATI FINALI');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log('====================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`Test superati: ${passedTests}/${totalTests}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 66,
          "type": "console_log",
          "content": "console.log(`Success rate: ${((passedTests / totalTests) * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 69,
          "type": "console_log",
          "content": "console.log('üéâ TUTTI I TEST SUPERATI! Sistema multi-risoluzione OK');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 71,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è  ALCUNI TEST FALLITI - Verificare implementazione');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\riverSkillCheckTest.ts": [
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST SKILL CHECK FIUME ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 120,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 123,
          "type": "console_log",
          "content": "console.log(`üåä ${result.scenario.name.toUpperCase()}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 124,
          "type": "console_log",
          "content": "console.log(`   Agilit√†: ${result.scenario.agilityScore} (Modificatore: ${Math.floor((result.scenario.agilityScore - 10) / 2)})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.log(`   Tentativi: ${result.attempts}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.log(`   Successi: ${result.successes} (${(result.successRate * 100).toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 127,
          "type": "console_log",
          "content": "console.log(`   Fallimenti: ${result.failures} (${((1 - result.successRate) * 100).toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 128,
          "type": "console_log",
          "content": "console.log(`   Danno medio per fallimento: ${result.averageDamage.toFixed(1)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 129,
          "type": "console_log",
          "content": "console.log(`   Tasso successo atteso: ${(result.scenario.expectedSuccessRate * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 133,
          "type": "console_log",
          "content": "console.log(`   ${status} Deviazione: ${(deviation * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 134,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 152,
          "type": "console_log",
          "content": "console.log('‚úÖ Tutti i messaggi fiume sono implementati:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 154,
          "type": "console_log",
          "content": "console.log(`   - ${message}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 164,
          "type": "console_log",
          "content": "console.log('üåä AVVIO TEST COMPLETO SISTEMA FIUME üåä');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 180,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 181,
          "type": "console_log",
          "content": "console.log(`   Tentativi totali: ${totalAttempts}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 182,
          "type": "console_log",
          "content": "console.log(`   Successi totali: ${totalSuccesses}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 183,
          "type": "console_log",
          "content": "console.log(`   Tasso successo generale: ${(overallSuccessRate * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 184,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 185,
          "type": "console_log",
          "content": "console.log('‚úÖ Test sistema fiume completato con successo!');",
          "comment": "log",
          "severity": "low"
        }
      ],
      "src\\utils\\saveSystem.ts": [
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 110,
          "type": "console_log",
          "content": "console.log(`Game saved to slot ${slot}:`, {",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.error('Save failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 148,
          "type": "console_log",
          "content": "console.log(`Game loaded from slot ${slot}:`, {",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 156,
          "type": "console_log",
          "content": "console.error('Load failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 195,
          "type": "console_log",
          "content": "console.warn(`Corrupted save in slot ${slot}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 212,
          "type": "console_log",
          "content": "console.log(`Save deleted from slot: ${slot}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 215,
          "type": "console_log",
          "content": "console.error('Delete failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 230,
          "type": "console_log",
          "content": "console.error('Export failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.log(`Save imported to slot ${slot}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 249,
          "type": "console_log",
          "content": "console.error('Import failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 282,
          "type": "console_log",
          "content": "console.log(`Save recovered for slot ${slot}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 288,
          "type": "console_log",
          "content": "console.error('Recovery failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 407,
          "type": "console_log",
          "content": "console.error('Recovery attempt failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 430,
          "type": "console_log",
          "content": "console.warn('Auto-save failed:', error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 546,
          "type": "console_log",
          "content": "console.warn(`Unknown save version: ${saveData.version}`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 586,
          "type": "console_log",
          "content": "console.error('Save error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 595,
          "type": "console_log",
          "content": "console.error('Load error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 616,
          "type": "console_log",
          "content": "console.error('Import error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 30,
          "type": "wip",
          "content": "gameFlags: Record<string, any>; // for future quest/event tracking",
          "comment": "// for future",
          "severity": "low"
        }
      ],
      "src\\interfaces\\gameState.ts": [
        {
          "file": "src\\interfaces\\gameState.ts",
          "line": 87,
          "type": "deprecated",
          "content": "visitedShelters: Record<string, boolean>; // Deprecated - mantenuto per compatibilit√†",
          "comment": "// Deprecated",
          "severity": "medium"
        }
      ],
      "src\\setupTests.ts": [
        {
          "file": "src\\setupTests.ts",
          "line": 52,
          "type": "deprecated",
          "content": "addListener: jest.fn(), // deprecated",
          "comment": "// deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\setupTests.ts",
          "line": 53,
          "type": "deprecated",
          "content": "removeListener: jest.fn(), // deprecated",
          "comment": "// deprecated",
          "severity": "medium"
        }
      ],
      "src\\components\\UniversalInfoPage.tsx": [
        {
          "file": "src\\components\\UniversalInfoPage.tsx",
          "line": 5,
          "type": "wip",
          "content": "* Linee guida per FUTURE MODIFICHE alle dimensioni testo e layout:",
          "comment": "* Linee guida per FUTURE",
          "severity": "low"
        }
      ],
      "src\\utils\\equipmentManager.ts": [
        {
          "file": "src\\utils\\equipmentManager.ts",
          "line": 21,
          "type": "wip",
          "content": "// Per ora solo weapon e armor, accessory per future espansioni",
          "comment": "// Per ora solo weapon e armor, accessory per future",
          "severity": "low"
        }
      ]
    },
    "severityGroups": {
      "high": [
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 102,
          "type": "console_log",
          "content": "console.error('‚ùå Analysis failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\analysis\\utils\\ErrorHandler.ts",
          "line": 15,
          "type": "console_log",
          "content": "console.error(`[FATAL] ${error.message}`, error.file ? `in ${error.file}` : '');",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 28,
          "type": "console_log",
          "content": "console.error('Failed to read project files:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 63,
          "type": "console_log",
          "content": "console.error('Error loading save slots:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 171,
          "type": "console_log",
          "content": "console.error('Load game error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 223,
          "type": "console_log",
          "content": "console.error('Delete save error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 250,
          "type": "console_log",
          "content": "console.error('Recovery error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 271,
          "type": "console_log",
          "content": "console.error('Export error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\components\\LoadScreen.tsx",
          "line": 309,
          "type": "console_log",
          "content": "console.error('Import error:', err);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\rules\\mechanics.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.error(`[addItem] Oggetto con ID ${itemId} non trovato.`);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\rules\\mechanics.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.error(`[removeItem] Tentativo di rimuovere da uno slot vuoto (indice: ${slotIndex}).`);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 98,
          "type": "console_log",
          "content": "console.error(\"Initialization failed in store:\", error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1360,
          "type": "console_log",
          "content": "console.error('Save error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1397,
          "type": "console_log",
          "content": "console.error(\"Failed to load map data during game load:\", error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1447,
          "type": "console_log",
          "content": "console.error('Load error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1517,
          "type": "console_log",
          "content": "console.error('Export error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1589,
          "type": "console_log",
          "content": "console.error('Import error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1607,
          "type": "console_log",
          "content": "console.error('Import setup error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 271,
          "type": "console_log",
          "content": "console.error('‚ùå MessageType senza colore:', missing);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 206,
          "type": "console_log",
          "content": "console.error('Error ID:', gameError.id);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 207,
          "type": "console_log",
          "content": "console.error('Type:', gameError.type);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 208,
          "type": "console_log",
          "content": "console.error('Message:', gameError.message);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 209,
          "type": "console_log",
          "content": "console.error('Stack:', gameError.stack);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 210,
          "type": "console_log",
          "content": "console.error('Context:', gameError.context);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 283,
          "type": "console_log",
          "content": "console.error('üö® Unhandled Promise Rejection:', gameError);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 309,
          "type": "console_log",
          "content": "console.error('üö® Unhandled Error:', gameError);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\fileUtils.ts",
          "line": 31,
          "type": "console_log",
          "content": "console.error('Download failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 89,
          "type": "console_log",
          "content": "console.error('Error analyzing map:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.error('Save failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 156,
          "type": "console_log",
          "content": "console.error('Load failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 215,
          "type": "console_log",
          "content": "console.error('Delete failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 230,
          "type": "console_log",
          "content": "console.error('Export failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 249,
          "type": "console_log",
          "content": "console.error('Import failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 288,
          "type": "console_log",
          "content": "console.error('Recovery failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 407,
          "type": "console_log",
          "content": "console.error('Recovery attempt failed:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 586,
          "type": "console_log",
          "content": "console.error('Save error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 595,
          "type": "console_log",
          "content": "console.error('Load error:', error);",
          "comment": "error",
          "severity": "high"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 616,
          "type": "console_log",
          "content": "console.error('Import error:', error);",
          "comment": "error",
          "severity": "high"
        }
      ],
      "medium": [
        {
          "file": "src\\analysis\\utils\\FileTypeClassifier.ts",
          "line": 38,
          "type": "temporary",
          "content": "// Templates",
          "comment": "lates",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 876,
          "type": "temporary",
          "content": "// Tempo sereno - nessuna penalit√†, possibile bonus leggero",
          "comment": "o sereno - nessuna penalit√†, possibile bonus leggero",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 888,
          "type": "temporary",
          "content": "// Tempesta - condizioni estremamente pericolose",
          "comment": "esta - condizioni estremamente pericolose",
          "severity": "medium"
        },
        {
          "file": "src\\analysis\\scanners\\ChangelogParser.ts",
          "line": 73,
          "type": "deprecated",
          "content": "{ pattern: /^###?\\s*(?:Deprecated|Deprecato|Obsoleto)/i, type: 'deprecated' },",
          "comment": "###?\\s*(?:Deprecated|Deprecato|Obsoleto)/i, type: 'deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\interfaces\\gameState.ts",
          "line": 87,
          "type": "deprecated",
          "content": "visitedShelters: Record<string, boolean>; // Deprecated - mantenuto per compatibilit√†",
          "comment": "// Deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\setupTests.ts",
          "line": 52,
          "type": "deprecated",
          "content": "addListener: jest.fn(), // deprecated",
          "comment": "// deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\setupTests.ts",
          "line": 53,
          "type": "deprecated",
          "content": "removeListener: jest.fn(), // deprecated",
          "comment": "// deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 34,
          "type": "deprecated",
          "content": "visitedShelters: {}, // Deprecated - mantenuto per compatibilit√†",
          "comment": "// Deprecated",
          "severity": "medium"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 89,
          "type": "deprecated",
          "content": "visitedShelters: {}, // Resetta rifugi (deprecated)",
          "comment": "// Resetta rifugi (deprecated",
          "severity": "medium"
        }
      ],
      "low": [
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 42,
          "type": "console_log",
          "content": "console.log('üöÄ Starting Documentation Sync Analysis...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 43,
          "type": "console_log",
          "content": "console.log('=====================================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 50,
          "type": "console_log",
          "content": "console.log('üìÅ Loading project files...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 52,
          "type": "console_log",
          "content": "console.log(`‚úÖ Loaded ${files.size} files`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 55,
          "type": "console_log",
          "content": "console.log('\\nüîç Analyzing codebase...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 57,
          "type": "console_log",
          "content": "console.log('‚úÖ Code analysis completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 58,
          "type": "console_log",
          "content": "console.log(this.codeScanner.getSummary(codeResult));",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 61,
          "type": "console_log",
          "content": "console.log('\\nüìö Analyzing documentation...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log('‚úÖ Documentation analysis completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log(this.docScanner.getSummary(docResult));",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 67,
          "type": "console_log",
          "content": "console.log('\\n‚öñÔ∏è Comparing code and documentation...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 72,
          "type": "console_log",
          "content": "console.log('‚úÖ Comparison completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 75,
          "type": "console_log",
          "content": "console.log('\\nüìÑ Generating report...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 82,
          "type": "console_log",
          "content": "console.log('‚úÖ Report generated');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 87,
          "type": "console_log",
          "content": "console.log('\\nüéØ Analysis Summary:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 88,
          "type": "console_log",
          "content": "console.log(summary);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 121,
          "type": "console_log",
          "content": "console.log('üìÅ Reading real project files...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.warn('‚ö†Ô∏è No files found, falling back to mock data');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 129,
          "type": "console_log",
          "content": "console.log(`‚úÖ Successfully loaded ${files.size} real files`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\AnalysisRunner.ts",
          "line": 133,
          "type": "console_log",
          "content": "console.warn('‚ö†Ô∏è Failed to read real files, using mock data:', error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 30,
          "type": "console_log",
          "content": "console.log('‚öñÔ∏è Starting code vs documentation comparison...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 56,
          "type": "console_log",
          "content": "console.log('‚úÖ Comparison completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\reports\\ReportGenerator.ts",
          "line": 32,
          "type": "console_log",
          "content": "console.log(`üìÑ Generating ${format} report...`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\AntiRegressionAnalyzer.ts",
          "line": 136,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze anti-regression file ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\ChangelogParser.ts",
          "line": 118,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not parse changelog ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\CodeScanner.ts",
          "line": 27,
          "type": "console_log",
          "content": "console.log('üîç Starting codebase analysis...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\CodeScanner.ts",
          "line": 44,
          "type": "console_log",
          "content": "console.log('‚úÖ Codebase analysis completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationScanner.ts",
          "line": 24,
          "type": "console_log",
          "content": "console.log('üìö Starting documentation analysis...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationScanner.ts",
          "line": 41,
          "type": "console_log",
          "content": "console.log('‚úÖ Documentation analysis completed');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 124,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not extract versions from ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 184,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read README file ${readmePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 224,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read changelog file ${changelogPath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\DocumentationVersionExtractor.ts",
          "line": 264,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read anti-regression file ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\MarkdownParser.ts",
          "line": 116,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not parse ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\ProjectStructureAnalyzer.ts",
          "line": 112,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not read directory ${dirPath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\ProjectStructureAnalyzer.ts",
          "line": 152,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze dependencies for ${file.path}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapParser.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not parse roadmap ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 155,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze roadmap ${path}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 232,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze item \"${item.title}\":`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 337,
          "type": "console_log",
          "content": "console.warn('Warning: Could not search codebase:', error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\DependencyMapper.ts",
          "line": 44,
          "type": "console_log",
          "content": "console.warn(`Warning: Could not analyze dependencies for ${filePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\ErrorHandler.ts",
          "line": 22,
          "type": "console_log",
          "content": "console.warn(`[WARNING] ${error.message}`, error.file ? `in ${error.file}` : '');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\ErrorHandler.ts",
          "line": 24,
          "type": "console_log",
          "content": "console.info(`[INFO] ${error.message}`, error.file ? `in ${error.file}` : '');",
          "comment": "info",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 53,
          "type": "console_log",
          "content": "console.warn(`Key file ${fileName} not found`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 67,
          "type": "console_log",
          "content": "console.warn('Source directory not found or inaccessible');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 80,
          "type": "console_log",
          "content": "console.warn('Documentation directory not found or inaccessible');",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 114,
          "type": "console_log",
          "content": "console.warn(`Failed to read ${relativeFilePath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\utils\\FileSystemReader.ts",
          "line": 118,
          "type": "console_log",
          "content": "console.warn(`Failed to read directory ${dirPath}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\__tests__\\MarkdownParser.test.ts",
          "line": 170,
          "type": "console_log",
          "content": "console.log('code block');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\App.tsx",
          "line": 127,
          "type": "console_log",
          "content": "console.log('[Zustand State Change] Lo stato √® cambiato.', {",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\App.tsx",
          "line": 160,
          "type": "console_log",
          "content": "console.log(`Scale: ${scale.toFixed(2)}, Viewport: ${viewportWidth}x${viewportHeight}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\App.tsx",
          "line": 165,
          "type": "console_log",
          "content": "console.log(`FPS: ${currentFPS}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 14,
          "type": "console_log",
          "content": "console.warn(`Nessun messaggio trovato per il tipo: ${type}`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 103,
          "type": "console_log",
          "content": "console.warn(`Bioma '${context.biome}' non mappato, usando messaggio default`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.warn(`Array messaggi vuoto per il tipo: ${type}`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\data\\MessageArchive.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.warn(`Formato messaggio non riconosciuto per il tipo: ${type}`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\hooks\\usePlayerMovement.ts",
          "line": 38,
          "type": "console_log",
          "content": "console.log(`üö´ Movimento bloccato: fuori dai confini (${x}, ${y})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\hooks\\usePlayerMovement.ts",
          "line": 46,
          "type": "console_log",
          "content": "console.log(`üèîÔ∏è Movimento bloccato: montagna a (${x}, ${y})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\rules\\mechanics.ts",
          "line": 226,
          "type": "console_log",
          "content": "console.warn(`[addItem] Inventario pieno. Impossibile aggiungere ${itemToAdd.name}.`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.log(\"Exit action triggered\");",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 182,
          "type": "console_log",
          "content": "console.log('üåê BROWSER COMPATIBILITY REPORT');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 183,
          "type": "console_log",
          "content": "console.log('================================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 184,
          "type": "console_log",
          "content": "console.log(`Browser: ${result.browser.name} ${result.browser.version}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 185,
          "type": "console_log",
          "content": "console.log(`Supported: ${result.browser.isSupported ? '‚úÖ YES' : '‚ùå NO'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 186,
          "type": "console_log",
          "content": "console.log(`Score: ${result.score}/100 (${result.status.toUpperCase()})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 187,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 188,
          "type": "console_log",
          "content": "console.log('Feature Tests:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 189,
          "type": "console_log",
          "content": "console.log(`  CSS Variables: ${result.tests.cssVariables ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 190,
          "type": "console_log",
          "content": "console.log(`  CSS Grid: ${result.tests.cssGrid ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log(`  Flexbox: ${result.tests.flexbox ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.log(`  Transform 3D: ${result.tests.transform3d ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 193,
          "type": "console_log",
          "content": "console.log(`  Animation: ${result.tests.animation ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 194,
          "type": "console_log",
          "content": "console.log(`  Performance API: ${result.tests.performance ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 195,
          "type": "console_log",
          "content": "console.log(`  Memory API: ${result.tests.memory ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 196,
          "type": "console_log",
          "content": "console.log(`  CRT Effects: ${result.tests.crtEffects ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 197,
          "type": "console_log",
          "content": "console.log(`  Scaling: ${result.tests.scaling ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 198,
          "type": "console_log",
          "content": "console.log(`  Responsive: ‚ùå RIMOSSO (keyboard-only desktop)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 199,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 202,
          "type": "console_log",
          "content": "console.log('üéâ EXCELLENT compatibility - All features supported!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 204,
          "type": "console_log",
          "content": "console.log('‚úÖ GOOD compatibility - Most features supported');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 206,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è ACCEPTABLE compatibility - Some features may not work optimally');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\browserTest.ts",
          "line": 208,
          "type": "console_log",
          "content": "console.log('‚ùå POOR compatibility - Many features may not work');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.log('=== REPORT COLORI MESSAGGI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 247,
          "type": "console_log",
          "content": "console.log(`Totale MessageType: ${getAllMessageColors().length}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 248,
          "type": "console_log",
          "content": "console.log(`Categorie: ${Object.keys(grouped).length}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 249,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 252,
          "type": "console_log",
          "content": "console.log(`üìÇ ${category.toUpperCase()}:`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 254,
          "type": "console_log",
          "content": "console.log(`  ‚úÖ ${color.messageType}: ${color.cssClass} (${color.color})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 255,
          "type": "console_log",
          "content": "console.log(`     ${color.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 257,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\colorTest.ts",
          "line": 275,
          "type": "console_log",
          "content": "console.log('‚úÖ Tutti i MessageType hanno un colore assegnato');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\errorHandler.tsx",
          "line": 232,
          "type": "console_log",
          "content": "console.warn('Failed to send error to service:', error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 34,
          "type": "console_log",
          "content": "console.log(`IBM Plex Mono loaded: ${isIBMPCLoaded}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 52,
          "type": "console_log",
          "content": "console.log(`${font} available: ${isAvailable}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 101,
          "type": "console_log",
          "content": "console.log('üî§ Starting Font IBM PC Cross-Browser Test...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\fontTest.ts",
          "line": 108,
          "type": "console_log",
          "content": "console.log('üî§ Font Test Results:', Object.fromEntries(this.testResults));",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 59,
          "type": "console_log",
          "content": "console.log('=== REPORT COLORI INVENTARIO ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 60,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 62,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log(`   Oggetti totali: ${result.totalItems}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log(`   Colori unici utilizzati: ${result.uniqueColors}/12`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`   Copertura colori: ${result.coverageScore.toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 66,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 68,
          "type": "console_log",
          "content": "console.log('üé® DISTRIBUZIONE COLORI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 73,
          "type": "console_log",
          "content": "console.log(`   ${colorClass}: ${count} oggetti (${percentage.toFixed(1)}%) - ${color}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 75,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 77,
          "type": "console_log",
          "content": "console.log('üì¶ DISTRIBUZIONE TIPI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 80,
          "type": "console_log",
          "content": "console.log(`   ${type}: ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 82,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 84,
          "type": "console_log",
          "content": "console.log('üíé DISTRIBUZIONE RARIT√Ä:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 87,
          "type": "console_log",
          "content": "console.log(`   ${rarity}: ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 89,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 91,
          "type": "console_log",
          "content": "console.log('üîç ESEMPI PER COLORE:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 107,
          "type": "console_log",
          "content": "console.log(`   ${colorClass} (${description}):`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 109,
          "type": "console_log",
          "content": "console.log(`     - ${item.name} (${item.type}${item.rarity ? `, ${item.rarity}` : ''})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE SISTEMA COLORI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 137,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 141,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 152,
          "type": "console_log",
          "content": "console.log(`‚ö†Ô∏è Tipo ${type} ha colori multipli: ${typeColors[type]} e ${colorClass}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 156,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Sistema colori validato con successo!' : '‚ùå Sistema colori necessita miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log('üé® AVVIO TEST COMPLETO COLORI INVENTARIO üé®');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 166,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 171,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 174,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventoryColorTest.ts",
          "line": 175,
          "type": "console_log",
          "content": "console.log('‚úÖ Test colori inventario completato!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 161,
          "type": "console_log",
          "content": "console.log('=== REPORT INDICATORI SELEZIONE INVENTARIO ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 162,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 164,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log(`   Indicatori totali: ${result.totalIndicators}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 166,
          "type": "console_log",
          "content": "console.log(`   Indicatori implementati: ${result.implementedIndicators}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 167,
          "type": "console_log",
          "content": "console.log(`   Tasso implementazione: ${((result.implementedIndicators/result.totalIndicators)*100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 168,
          "type": "console_log",
          "content": "console.log(`   Punteggio generale: ${result.overallScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 171,
          "type": "console_log",
          "content": "console.log('üéØ PUNTEGGI SPECIFICI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 172,
          "type": "console_log",
          "content": "console.log(`   Usabilit√†: ${result.usabilityScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 173,
          "type": "console_log",
          "content": "console.log(`   Accessibilit√†: ${result.accessibilityScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 174,
          "type": "console_log",
          "content": "console.log(`   Feedback Visivo: ${result.visualFeedbackScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 175,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 177,
          "type": "console_log",
          "content": "console.log('‚úÖ INDICATORI IMPLEMENTATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 180,
          "type": "console_log",
          "content": "console.log(`   ‚úÖ ${indicator.name}: ${indicator.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 181,
          "type": "console_log",
          "content": "console.log(`      Effetto: ${indicator.effect}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 183,
          "type": "console_log",
          "content": "console.log(`      CSS: ${indicator.cssClass}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 190,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log('‚ùå INDICATORI NON IMPLEMENTATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 193,
          "type": "console_log",
          "content": "console.log(`   ‚ùå ${indicator.name}: ${indicator.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 222,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE INDICATORI SELEZIONE:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 227,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value.toFixed(1)} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 231,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 232,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Tutti i criteri di qualit√† sono soddisfatti!' : '‚ùå Alcuni criteri necessitano miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 241,
          "type": "console_log",
          "content": "console.log('üéØ AVVIO TEST COMPLETO INDICATORI SELEZIONE üéØ');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 242,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 247,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 250,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\inventorySelectionTest.ts",
          "line": 251,
          "type": "console_log",
          "content": "console.log('‚úÖ Test indicatori selezione completato!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 59,
          "type": "console_log",
          "content": "console.log('=== REPORT AZIONI OGGETTI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 60,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 62,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log(`   Oggetti totali: ${result.totalItems}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log(`   Oggetti con azioni: ${result.itemsWithActions}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`   Copertura azioni: ${result.coverageScore.toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 66,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 68,
          "type": "console_log",
          "content": "console.log('üéØ DISTRIBUZIONE AZIONI DISPONIBILI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 79,
          "type": "console_log",
          "content": "console.log(`   ${name} (${key}): ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 81,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 83,
          "type": "console_log",
          "content": "console.log('‚≠ê DISTRIBUZIONE AZIONI DEFAULT:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 87,
          "type": "console_log",
          "content": "console.log(`   ${name} (${key}): ${count} oggetti (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 89,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 91,
          "type": "console_log",
          "content": "console.log('üîç ESEMPI PER TIPO:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 105,
          "type": "console_log",
          "content": "console.log(`   ${type.toUpperCase()}:`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 110,
          "type": "console_log",
          "content": "console.log(`     - ${item.name}: [${availableActions}] (default: ${defaultAction?.key || 'nessuna'})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('üîç TEST ESAME DETTAGLIATO:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 120,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.log(`üìã ESAME: ${item.name}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 130,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log(`   ${line}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 135,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 160,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE SISTEMA AZIONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value.toFixed(1)} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 170,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Sistema azioni validato con successo!' : '‚ùå Sistema azioni necessita miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 179,
          "type": "console_log",
          "content": "console.log('‚öôÔ∏è AVVIO TEST COMPLETO AZIONI OGGETTI ‚öôÔ∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 180,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 185,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 188,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemActionsTest.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.log('‚úÖ Test azioni oggetti completato!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 118,
          "type": "console_log",
          "content": "console.log('=== TEST COLORI OGGETTI INVENTARIO ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log(`${itemId}: ${item.name}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 133,
          "type": "console_log",
          "content": "console.log(`  Tipo: ${item.type}, Rarit√†: ${item.rarity || 'N/A'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 134,
          "type": "console_log",
          "content": "console.log(`  Colore: ${description} (${color})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 135,
          "type": "console_log",
          "content": "console.log(`  Classe CSS: ${colorClass}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 136,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 139,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE COLORI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 141,
          "type": "console_log",
          "content": "console.log(`  ${colorClass}: ${count} oggetti`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 144,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 145,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE TIPI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 147,
          "type": "console_log",
          "content": "console.log(`  ${type}: ${count} oggetti`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 150,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemColors.ts",
          "line": 151,
          "type": "console_log",
          "content": "console.log(`‚úÖ Test completato: ${Object.keys(items).length} oggetti analizzati`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 314,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST SISTEMA OPZIONI OGGETTI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 315,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 321,
          "type": "console_log",
          "content": "console.log('üìä RISULTATI GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 322,
          "type": "console_log",
          "content": "console.log(`   Test passati: ${passed}/${total} (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 323,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 325,
          "type": "console_log",
          "content": "console.log('üß™ DETTAGLI TEST:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 328,
          "type": "console_log",
          "content": "console.log(`${status} ${result.testName}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 329,
          "type": "console_log",
          "content": "console.log(`   ${result.details}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 331,
          "type": "console_log",
          "content": "console.log(`   Errore: ${result.error}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 333,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 337,
          "type": "console_log",
          "content": "console.log('üéâ ECCELLENTE: Sistema opzioni oggetti perfetto!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 339,
          "type": "console_log",
          "content": "console.log('‚úÖ BUONO: Sistema opzioni oggetti funziona bene.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 341,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è PROBLEMI: Sistema opzioni oggetti necessita correzioni.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 349,
          "type": "console_log",
          "content": "console.log('‚öôÔ∏è AVVIO TEST COMPLETO SISTEMA OPZIONI OGGETTI ‚öôÔ∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 350,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 355,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\itemOptionsTest.ts",
          "line": 356,
          "type": "console_log",
          "content": "console.log('‚úÖ Test sistema opzioni oggetti completato!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 98,
          "type": "console_log",
          "content": "console.log('=== ANALISI MAPPA BIOMI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 99,
          "type": "console_log",
          "content": "console.log(`Celle totali: ${analysis.totalCells}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 100,
          "type": "console_log",
          "content": "console.log(`Simboli unici: ${analysis.uniqueSymbols.length}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 101,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 103,
          "type": "console_log",
          "content": "console.log('BIOMI IDENTIFICATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 106,
          "type": "console_log",
          "content": "console.log(`${status} ${biome.symbol}: ${biome.count} celle (${biome.percentage.toFixed(1)}%) - ${biome.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 110,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 111,
          "type": "console_log",
          "content": "console.log('SIMBOLI SCONOSCIUTI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mapAnalyzer.ts",
          "line": 113,
          "type": "console_log",
          "content": "console.log(`‚ùå '${symbol}': Non mappato`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\messageSystemTest.ts",
          "line": 76,
          "type": "console_log",
          "content": "console.log('üß™ Running comprehensive message system test...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\messageSystemTest.ts",
          "line": 98,
          "type": "console_log",
          "content": "console.log(summary);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('=== REPORT MESSAGGI IRONICI MONTAGNE ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 120,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 122,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 123,
          "type": "console_log",
          "content": "console.log(`   Messaggi unici: ${result.totalMessages}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 124,
          "type": "console_log",
          "content": "console.log(`   Lunghezza media: ${result.averageLength.toFixed(1)} caratteri`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.log(`   Messaggi ironici: ${result.ironicMessages}/${result.totalMessages} (${((result.ironicMessages/result.totalMessages)*100).toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.log(`   Punteggio qualit√†: ${result.qualityScore.toFixed(1)}/100`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 127,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 129,
          "type": "console_log",
          "content": "console.log('üé≠ DISTRIBUZIONE TONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 132,
          "type": "console_log",
          "content": "console.log(`   ${tone}: ${count} messaggi (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 134,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 136,
          "type": "console_log",
          "content": "console.log('üí¨ TUTTI I MESSAGGI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 141,
          "type": "console_log",
          "content": "console.log(`   ${index}. ${ironicIcon} \"${message}\"`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 142,
          "type": "console_log",
          "content": "console.log(`      Tono: ${analysis.tone}, Parole chiave: [${analysis.keywords.join(', ')}]`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 145,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 149,
          "type": "console_log",
          "content": "console.log('‚úÖ ECCELLENTE: Messaggi di altissima qualit√† con variet√† e ironia perfette!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 151,
          "type": "console_log",
          "content": "console.log('‚úÖ OTTIMO: Messaggi di buona qualit√† con ironia appropriata.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 153,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è BUONO: Messaggi accettabili ma potrebbero beneficiare di pi√π variet√†.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 155,
          "type": "console_log",
          "content": "console.log('‚ùå MIGLIORABILE: Messaggi necessitano di pi√π ironia e variet√†.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 182,
          "type": "console_log",
          "content": "console.log('üîç VALIDAZIONE QUALIT√Ä MESSAGGI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 187,
          "type": "console_log",
          "content": "console.log(`   ${status} ${check.name}: ${check.value} (min: ${check.min})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 191,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 192,
          "type": "console_log",
          "content": "console.log(allPassed ? '‚úÖ Tutti i criteri di qualit√† sono soddisfatti!' : '‚ùå Alcuni criteri necessitano miglioramenti.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 201,
          "type": "console_log",
          "content": "console.log('‚õ∞Ô∏è AVVIO TEST COMPLETO MESSAGGI MONTAGNE ‚õ∞Ô∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 202,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 207,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 210,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\mountainMessageTest.ts",
          "line": 211,
          "type": "console_log",
          "content": "console.log('‚úÖ Test messaggi montagne completato!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 85,
          "type": "console_log",
          "content": "console.log('üîç Performance monitoring started');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 99,
          "type": "console_log",
          "content": "console.log('‚èπÔ∏è Performance monitoring stopped');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 155,
          "type": "console_log",
          "content": "console.log('üìä PERFORMANCE REPORT');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 156,
          "type": "console_log",
          "content": "console.log('=====================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 157,
          "type": "console_log",
          "content": "console.log(`FPS: ${report.averageFps} avg (${report.minFps}-${report.maxFps})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 158,
          "type": "console_log",
          "content": "console.log(`Memory: ${report.averageMemory} MB avg, ${report.peakMemory} MB peak`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 159,
          "type": "console_log",
          "content": "console.log(`CPU: ${report.averageCpu}% avg, ${report.peakCpu}% peak`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 160,
          "type": "console_log",
          "content": "console.log(`Samples: ${report.totalSamples}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 161,
          "type": "console_log",
          "content": "console.log(`Duration: ${report.duration}ms`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log('‚úÖ Performance: EXCELLENT (55+ FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 167,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è Performance: GOOD (45-54 FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è Performance: ACCEPTABLE (30-44 FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 171,
          "type": "console_log",
          "content": "console.log('‚ùå Performance: POOR (<30 FPS)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 175,
          "type": "console_log",
          "content": "console.log('‚úÖ Memory: EXCELLENT (<50 MB)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 177,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è Memory: GOOD (50-100 MB)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\performanceMonitor.ts",
          "line": 179,
          "type": "console_log",
          "content": "console.log('‚ùå Memory: HIGH (>100 MB)');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 247,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST INTEGRAZIONE SISTEMA PORZIONI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 248,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 254,
          "type": "console_log",
          "content": "console.log('üìä RISULTATI GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 255,
          "type": "console_log",
          "content": "console.log(`   Test passati: ${passed}/${total} (${percentage.toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 256,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 258,
          "type": "console_log",
          "content": "console.log('üß™ DETTAGLI TEST:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 261,
          "type": "console_log",
          "content": "console.log(`${status} ${result.testName}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 262,
          "type": "console_log",
          "content": "console.log(`   ${result.details}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 264,
          "type": "console_log",
          "content": "console.log(`   Errore: ${result.error}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 266,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 270,
          "type": "console_log",
          "content": "console.log('üéâ ECCELLENTE: Integrazione sistema porzioni perfetta!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 272,
          "type": "console_log",
          "content": "console.log('‚úÖ BUONO: Integrazione sistema porzioni funziona bene.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 274,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è PROBLEMI: Integrazione sistema porzioni necessita correzioni.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 282,
          "type": "console_log",
          "content": "console.log('üîó AVVIO TEST COMPLETO INTEGRAZIONE PORZIONI üîó');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 283,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 288,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionIntegrationTest.ts",
          "line": 289,
          "type": "console_log",
          "content": "console.log('‚úÖ Test integrazione sistema porzioni completato!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 215,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST SISTEMA PORZIONI ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 216,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 218,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 219,
          "type": "console_log",
          "content": "console.log(`   Scenari totali: ${result.totalScenarios}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 220,
          "type": "console_log",
          "content": "console.log(`   Scenari passati: ${result.passedScenarios}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 221,
          "type": "console_log",
          "content": "console.log(`   Scenari falliti: ${result.failedScenarios}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 222,
          "type": "console_log",
          "content": "console.log(`   Punteggio copertura: ${result.coverageScore.toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 223,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 225,
          "type": "console_log",
          "content": "console.log('üß™ RISULTATI DETTAGLIATI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 228,
          "type": "console_log",
          "content": "console.log(`   ${status} ${test.scenario}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 231,
          "type": "console_log",
          "content": "console.log(`      Atteso: ${JSON.stringify(test.expected)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 232,
          "type": "console_log",
          "content": "console.log(`      Ottenuto: ${JSON.stringify(test.actual)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 234,
          "type": "console_log",
          "content": "console.log(`      Errore: ${test.error}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 239,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 242,
          "type": "console_log",
          "content": "console.log('‚úÖ ECCELLENTE: Sistema porzioni funziona perfettamente!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 244,
          "type": "console_log",
          "content": "console.log('‚úÖ BUONO: Sistema porzioni funziona bene con piccoli problemi.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è ACCETTABILE: Sistema porzioni ha alcuni problemi da risolvere.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 248,
          "type": "console_log",
          "content": "console.log('‚ùå PROBLEMATICO: Sistema porzioni necessita correzioni significative.');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 256,
          "type": "console_log",
          "content": "console.log('üîß TEST UTILIT√Ä SISTEMA PORZIONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 257,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 266,
          "type": "console_log",
          "content": "console.log(`   ‚úÖ ${item.name}: ${item.portionsPerUnit} ${item.portionSize}i per unit√†`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 272,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 273,
          "type": "console_log",
          "content": "console.log(`üìä Oggetti con porzioni: ${portionableCount}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 274,
          "type": "console_log",
          "content": "console.log(`üìä Oggetti senza porzioni: ${nonPortionableCount}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 275,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 278,
          "type": "console_log",
          "content": "console.log('üìù TEST DESCRIZIONI PORZIONI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 282,
          "type": "console_log",
          "content": "console.log(`   Slot completo: ${getPortionDescription(testItem, slot)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 285,
          "type": "console_log",
          "content": "console.log(`   Dopo 1 consumo: ${getPortionDescription(testItem, slot)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 289,
          "type": "console_log",
          "content": "console.log(`   Dopo 3 consumi: ${getPortionDescription(testItem, slot)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 297,
          "type": "console_log",
          "content": "console.log('üçΩÔ∏è AVVIO TEST COMPLETO SISTEMA PORZIONI üçΩÔ∏è');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 298,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 303,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 306,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\portionSystemTest.ts",
          "line": 307,
          "type": "console_log",
          "content": "console.log('‚úÖ Test sistema porzioni completato!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 47,
          "type": "console_log",
          "content": "console.log(`üìä Contrast ratio: ${contrastRatio.toFixed(3)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`üì± ${resolution.name} (${resolution.width}x${resolution.height}): ${isReadable ? '‚úÖ' : '‚ùå'} Leggibile`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 117,
          "type": "console_log",
          "content": "console.log(`üî§ Special characters supported: ${isSpecialCharsSupported ? '‚úÖ' : '‚ùå'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 140,
          "type": "console_log",
          "content": "console.log(`üìè Line spacing ratio: ${spacingRatio.toFixed(2)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 146,
          "type": "console_log",
          "content": "console.log('üìñ Starting IBM Plex Mono Readability Test...');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\readabilityTest.ts",
          "line": 153,
          "type": "console_log",
          "content": "console.log('üìñ Readability Test Results:', Object.fromEntries(this.testResults));",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 39,
          "type": "console_log",
          "content": "console.log(`üß™ ${test.name}:`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 40,
          "type": "console_log",
          "content": "console.log(`   Risoluzione: ${test.width}x${test.height}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 41,
          "type": "console_log",
          "content": "console.log(`   Scale atteso: ${test.expectedScale}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 42,
          "type": "console_log",
          "content": "console.log(`   Scale calcolato: ${finalScale.toFixed(2)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 43,
          "type": "console_log",
          "content": "console.log(`   Risultato: ${isCorrect ? '‚úÖ PASS' : '‚ùå FAIL'}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 44,
          "type": "console_log",
          "content": "console.log(`   Descrizione: ${test.description}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 45,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 51,
          "type": "console_log",
          "content": "console.log('üöÄ INIZIO TEST DESKTOP-ONLY RISOLUZIONE');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 52,
          "type": "console_log",
          "content": "console.log('==========================================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 63,
          "type": "console_log",
          "content": "console.log('üìä RISULTATI FINALI');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 64,
          "type": "console_log",
          "content": "console.log('====================');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 65,
          "type": "console_log",
          "content": "console.log(`Test superati: ${passedTests}/${totalTests}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 66,
          "type": "console_log",
          "content": "console.log(`Success rate: ${((passedTests / totalTests) * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 69,
          "type": "console_log",
          "content": "console.log('üéâ TUTTI I TEST SUPERATI! Sistema multi-risoluzione OK');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\resolutionTest.ts",
          "line": 71,
          "type": "console_log",
          "content": "console.log('‚ö†Ô∏è  ALCUNI TEST FALLITI - Verificare implementazione');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 119,
          "type": "console_log",
          "content": "console.log('=== REPORT TEST SKILL CHECK FIUME ===');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 120,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 123,
          "type": "console_log",
          "content": "console.log(`üåä ${result.scenario.name.toUpperCase()}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 124,
          "type": "console_log",
          "content": "console.log(`   Agilit√†: ${result.scenario.agilityScore} (Modificatore: ${Math.floor((result.scenario.agilityScore - 10) / 2)})`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 125,
          "type": "console_log",
          "content": "console.log(`   Tentativi: ${result.attempts}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 126,
          "type": "console_log",
          "content": "console.log(`   Successi: ${result.successes} (${(result.successRate * 100).toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 127,
          "type": "console_log",
          "content": "console.log(`   Fallimenti: ${result.failures} (${((1 - result.successRate) * 100).toFixed(1)}%)`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 128,
          "type": "console_log",
          "content": "console.log(`   Danno medio per fallimento: ${result.averageDamage.toFixed(1)}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 129,
          "type": "console_log",
          "content": "console.log(`   Tasso successo atteso: ${(result.scenario.expectedSuccessRate * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 133,
          "type": "console_log",
          "content": "console.log(`   ${status} Deviazione: ${(deviation * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 134,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 152,
          "type": "console_log",
          "content": "console.log('‚úÖ Tutti i messaggi fiume sono implementati:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 154,
          "type": "console_log",
          "content": "console.log(`   - ${message}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 164,
          "type": "console_log",
          "content": "console.log('üåä AVVIO TEST COMPLETO SISTEMA FIUME üåä');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 165,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 169,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 180,
          "type": "console_log",
          "content": "console.log('üìä STATISTICHE GENERALI:');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 181,
          "type": "console_log",
          "content": "console.log(`   Tentativi totali: ${totalAttempts}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 182,
          "type": "console_log",
          "content": "console.log(`   Successi totali: ${totalSuccesses}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 183,
          "type": "console_log",
          "content": "console.log(`   Tasso successo generale: ${(overallSuccessRate * 100).toFixed(1)}%`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 184,
          "type": "console_log",
          "content": "console.log('');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\riverSkillCheckTest.ts",
          "line": 185,
          "type": "console_log",
          "content": "console.log('‚úÖ Test sistema fiume completato con successo!');",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 110,
          "type": "console_log",
          "content": "console.log(`Game saved to slot ${slot}:`, {",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 148,
          "type": "console_log",
          "content": "console.log(`Game loaded from slot ${slot}:`, {",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 195,
          "type": "console_log",
          "content": "console.warn(`Corrupted save in slot ${slot}:`, error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 212,
          "type": "console_log",
          "content": "console.log(`Save deleted from slot: ${slot}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 246,
          "type": "console_log",
          "content": "console.log(`Save imported to slot ${slot}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 282,
          "type": "console_log",
          "content": "console.log(`Save recovered for slot ${slot}`);",
          "comment": "log",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 430,
          "type": "console_log",
          "content": "console.warn('Auto-save failed:', error);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 546,
          "type": "console_log",
          "content": "console.warn(`Unknown save version: ${saveData.version}`);",
          "comment": "warn",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 166,
          "type": "partial",
          "content": "// Find features documented but not implemented",
          "comment": "// Find features documented but not implemented",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\engine\\ComparisonEngine.ts",
          "line": 239,
          "type": "partial",
          "content": "// For now, we'll create placeholder discrepancies based on our earlier analysis",
          "comment": "// For now, we'll create placeholder",
          "severity": "low"
        },
        {
          "file": "src\\analysis\\scanners\\RoadmapStatusAnalyzer.ts",
          "line": 499,
          "type": "partial",
          "content": "// In-progress items that aren't partially implemented are medium severity",
          "comment": "// In-progress items that aren't partial",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1121,
          "type": "partial",
          "content": "consumeFood: () => { /* Placeholder */ },",
          "comment": "/* Placeholder",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1122,
          "type": "partial",
          "content": "consumeDrink: () => { /* Placeholder */ },",
          "comment": "/* Placeholder",
          "severity": "low"
        },
        {
          "file": "src\\components\\UniversalInfoPage.tsx",
          "line": 5,
          "type": "wip",
          "content": "* Linee guida per FUTURE MODIFICHE alle dimensioni testo e layout:",
          "comment": "* Linee guida per FUTURE",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1172,
          "type": "wip",
          "content": "// Visita diurna - marca come non pi√π accessibile per future visite diurne",
          "comment": "// Visita diurna - marca come non pi√π accessibile per future",
          "severity": "low"
        },
        {
          "file": "src\\stores\\gameStore.ts",
          "line": 1327,
          "type": "wip",
          "content": "gameFlags: {} // per future espansioni",
          "comment": "// per future",
          "severity": "low"
        },
        {
          "file": "src\\utils\\equipmentManager.ts",
          "line": 21,
          "type": "wip",
          "content": "// Per ora solo weapon e armor, accessory per future espansioni",
          "comment": "// Per ora solo weapon e armor, accessory per future",
          "severity": "low"
        },
        {
          "file": "src\\utils\\saveSystem.ts",
          "line": 30,
          "type": "wip",
          "content": "gameFlags: Record<string, any>; // for future quest/event tracking",
          "comment": "// for future",
          "severity": "low"
        }
      ]
    },
    "byType": {
      "todo": 0,
      "fixme": 0,
      "development": 415,
      "deprecated": 6,
      "partial": 5,
      "wip": 5
    }
  }
}